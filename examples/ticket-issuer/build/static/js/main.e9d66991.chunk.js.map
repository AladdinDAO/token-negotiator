{"version":3,"sources":["Card/index.js","App.js","reportWebVitals.js","index.js"],"names":["MediaCard","tokenInstance","className","Typography","gutterBottom","variant","component","ticketClass","toString","color","ticketId","devconId","src","App","useState","tokens","setTokens","negotiator","Negotiator","attestationOrigin","tokenOrigin","useEffect","getTokenInstances","res","success","href","length","map","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAuBeA,MAnBf,YAAuC,IAAlBC,EAAiB,EAAjBA,cACnB,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,cAACC,EAAA,EAAD,CAAYD,UAAU,cAAcE,cAAY,EAACC,QAAQ,KAAKC,UAAU,KAAxE,SACGL,EAAcM,YAAYC,aAE7B,cAACL,EAAA,EAAD,CAAYD,UAAU,WAAWG,QAAQ,QAAQI,MAAM,gBAAgBH,UAAU,IAAjF,SACGL,EAAcS,SAASF,aAE1B,eAACL,EAAA,EAAD,CAAYD,UAAU,WAAWG,QAAQ,QAAQI,MAAM,gBAAgBH,UAAU,IAAjF,wBACcL,EAAcU,SAASH,iBAGvC,qBAAKN,UAAU,YAAYU,IAAI,iC,MC2CtBC,MAtDf,WAAe,MAEaC,mBAAS,IAFtB,mBAERC,EAFQ,KAEAC,EAFA,KASPC,EAAa,IAAIC,IALR,GACC,CACdC,kBAAmB,+BACnBC,YAAa,2FAUf,OANAC,qBAAU,WAERJ,EAAWK,mBAAkB,SAAAC,GACxBA,EAAIC,SAASR,EAAUO,EAAIR,aAE/B,IAED,uBAAMb,UAAU,aAAhB,UACE,mBAAGuB,KAAK,IAAR,SAAY,qBAAKvB,UAAU,OAAOU,IAAI,mBACtC,qBAAKV,UAAU,aAAf,SACE,+DAEF,qBAAKA,UAAU,aAAf,SACE,qBAAKA,UAAU,gBAAgBU,IAAI,0BAErC,qBAAKV,UAAU,aAAf,SACE,2KAEF,qBAAKA,UAAU,aAAf,SACE,gDAEF,qBAAKA,UAAU,aAAf,SACE,sBAAKA,UAAU,gBAAf,UAEIa,GAAUA,EAAOW,OAAS,GAAKX,EAAOY,KAAI,SAAC1B,EAAe2B,GACxD,OAAO,cAAC,EAAD,CAAkB3B,cAAeA,GAAtB2B,OAInBb,EAAOW,QAAU,gCAChB,oDACA,uCAAS,mBAAGD,KAAK,kPAAR,kBAAT,qDACA,uCAAS,mBAAGA,KAAK,8OAAR,kBAAT,qDACA,uCAAS,mBAAGA,KAAK,8OAAR,kBAAT,qDACA,uCAAS,mBAAGA,KAAK,8OAAR,kBAAT,iECxCCI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e9d66991.chunk.js","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport './Card.css';\n\nfunction MediaCard({ tokenInstance }) {\n  return (\n    <div className=\"ticketContainer\">\n      <div className=\"ticketDetails\">\n        <Typography className=\"ticketClass\" gutterBottom variant=\"h5\" component=\"h2\">\n          {tokenInstance.ticketClass.toString()}\n        </Typography>\n        <Typography className=\"ticketId\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {tokenInstance.ticketId.toString()}\n        </Typography>\n        <Typography className=\"devconId\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          Devcon ID: {tokenInstance.devconId.toString()}\n        </Typography>\n      </div>\n      <img className=\"ticketImg\" src=\"ticket_example_image.svg\"></img>\n    </div>\n  );\n}\n\nexport default MediaCard;\n","import React, { useState, useEffect } from 'react';\nimport { Negotiator } from 'token-negotiator';\nimport Card from './Card';\nimport './App.css';\n\n// A minimal example to read tokens and render them to a view.\n\nfunction App() {\n  // local State: tokens[], setTokens: Method to update the state of tokens.\n  let [tokens, setTokens] = useState([]);\n  // create instance of Negotiator.\n  const filter = {};\n  const options = {\n    attestationOrigin: \"https://stage.attestation.id\",\n    tokenOrigin: \"https://tokenscript.github.io/token-negotiator/examples/ticket-issuer/build/index.html\"\n  };\n  const negotiator = new Negotiator(filter, options);\n  // react effect\n  useEffect(() => {\n    // on success assign tokens to react state\n    negotiator.getTokenInstances(res => {\n      if(res.success) setTokens(res.tokens);\n    });\n  }, []);\n  return (\n    <main className=\"pageStyles\">\n      <a href=\"/\"><img className=\"logo\" src=\"./devcon.svg\"></img></a>\n      <div className=\"flexCenter\">\n        <p>[DEMO Ticket Issuer Website]</p>\n      </div>\n      <div className=\"flexCenter\">\n        <img className=\"devcon_bogota\" src=\"./devcon_bogota.svg\"></img>\n      </div>\n      <div className=\"flexCenter\">\n        <p>A Devcon ticket provides access to the event and special offers between the dates X-XX for hotel bookings, travel, restaurants and more.</p>\n      </div>\n      <div className=\"flexCenter\">\n        <p>Your tickets:</p>\n      </div>\n      <div className=\"flexCenter\">\n        <div className=\"tokensWrapper\">\n          {\n            tokens && tokens.length > 0 && tokens.map((tokenInstance, index) => {\n              return <Card key={index} tokenInstance={tokenInstance} />\n            })\n          }\n          {\n            !tokens.length && <div>\n              <b>- no ticket found -</b>\n              <p>Click <a href=\"?ticket=MIGbMA0CAQYCBWE3ap3-AgEABEEEKJZVxMEXbkSZZBWnNUTX_5ieu8GUqf0bx_a0tBPF6QYskABaMJBYhDOXsmQt3csk_TfMZ2wdmfRkK7ePCOI2kgNHADBEAiBwLK_95NPZo0W01HDBfyZisZ2KaNrzoWuxRV-nhjGLMAIgaOP4eVVINH5xM8Cv9OVDdyOG3BxUqyPVQOuDU9PaC9o=&secret=45845870684\">here</a> to generate a ticket (for demo purposes only).</p> \n              <p>Click <a href=\"?ticket=MIGYMAoCAQYCAgFNAgECBEEEKJZVxMEXbkSZZBWnNUTX_5ieu8GUqf0bx_a0tBPF6QYskABaMJBYhDOXsmQt3csk_TfMZ2wdmfRkK7ePCOI2kgNHADBEAiB4thME54fWjTs1eJ5XseTPk7sqOUa9JzVsDMURBwTlJwIgChH-eU6seNnC8hVDgBvLvUJPpGWviWsQ2WwWrcC7Meg=&secret=45845870684\">here</a> to generate a ticket (for demo purposes only).</p> \n              <p>Click <a href=\"?ticket=MIGZMAoCAQYCAgDeAgEBBEEEKJZVxMEXbkSZZBWnNUTX_5ieu8GUqf0bx_a0tBPF6QYskABaMJBYhDOXsmQt3csk_TfMZ2wdmfRkK7ePCOI2kgNIADBFAiEAy0hGTGFw_KWyk0EbDFI7y4x8LaplJ6PEPFDb-AQ82GUCIEKP4650eRZyvbgNbTcnjRLaRthc4oIFEn7FVS2nNJ6o&secret=45845870684\">here</a> to generate a ticket (for demo purposes only).</p> \n              <p>Click <a href=\"?ticket=MIGXMAkCAQYCAW8CAQAEQQQollXEwRduRJlkFac1RNf_mJ67wZSp_RvH9rS0E8XpBiyQAFowkFiEM5eyZC3dyyT9N8xnbB2Z9GQrt48I4jaSA0cAMEQCIFavePjptmgxBsVuHp7bZSDxK0ovB8d9URp2VjiGos56AiA9apKTL6Kk74Jgf2H7Mb4EZqlsdwJLXSN23sC6aoRyKg==&secret=45845870684\">here</a> to generate a ticket (for demo purposes only).</p> \n            </div>\n          }\n        </div>\n      </div>\n    </main>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}