{"version":3,"sources":["Card/index.js","App.js","reportWebVitals.js","index.js"],"names":["MediaCard","tokenInstance","className","Typography","gutterBottom","variant","component","ticketClass","toString","color","ticketId","devconId","src","App","useState","tokens","setTokens","negotiator","Negotiator","useEffect","getTokenInstances","res","success","openTicketInIframe","ticket","secret","_iframe","document","getElementById","href","length","map","index","onClick","e","id","style","visibility","width","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"iQAuBeA,MAnBf,YAAuC,IAAlBC,EAAiB,EAAjBA,cACnB,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,cAACC,EAAA,EAAD,CAAYD,UAAU,cAAcE,cAAY,EAACC,QAAQ,KAAKC,UAAU,KAAxE,SACGL,EAAcM,YAAYC,aAE7B,cAACL,EAAA,EAAD,CAAYD,UAAU,WAAWG,QAAQ,QAAQI,MAAM,gBAAgBH,UAAU,IAAjF,SACGL,EAAcS,SAASF,aAE1B,eAACL,EAAA,EAAD,CAAYD,UAAU,WAAWG,QAAQ,QAAQI,MAAM,gBAAgBH,UAAU,IAAjF,wBACcL,EAAcU,SAASH,iBAGvC,qBAAKN,UAAU,YAAYU,IAAI,iC,MCgEtBC,MA3Ef,WAEE,MAA0BC,mBAAS,IAAnC,mBAAKC,EAAL,KAAaC,EAAb,KAKMC,EAAa,IAAIC,IAHR,GACD,gBACE,IAGhBC,qBAAU,WAERF,EAAWG,mBAAkB,SAAAC,GACxBA,EAAIC,SAASN,EAAUK,EAAIN,aAE/B,IAGH,IAAMQ,EAAqB,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,OAC/BC,EAAUC,SAASC,eAAe,gBACnCF,IACDA,EAAQd,IAAR,6DAAoEY,EAApE,mBAAqFC,KAIzF,OACE,uBAAMvB,UAAU,aAAhB,UACE,mBAAG2B,KAAK,IAAR,SAAY,qBAAK3B,UAAU,OAAOU,IAAI,mBACtC,qBAAKV,UAAU,aAAf,SACE,+DAEF,qBAAKA,UAAU,aAAf,SACE,qBAAKA,UAAU,gBAAgBU,IAAI,0BAErC,qBAAKV,UAAU,aAAf,SACE,2KAEF,qBAAKA,UAAU,aAAf,SACE,gDAEF,qBAAKA,UAAU,aAAf,SACE,sBAAKA,UAAU,gBAAf,UAEIa,GAAUA,EAAOe,OAAS,GAAKf,EAAOgB,KAAI,SAAC9B,EAAe+B,GACxD,OAAO,cAAC,EAAD,CAAkB/B,cAAeA,GAAtB+B,OAInBjB,EAAOe,QAAU,gCAChB,oDACA,iDACA,wBAAQG,QAAS,SAAAC,GAAC,OAAIX,EAAmB,CACvCC,OAAQ,uNACRC,OAAQ,mBAEV,wBAAQQ,QAAS,SAAAC,GAAC,OAAIX,EAAmB,CACvCC,OAAQ,kNACRC,OAAQ,mBAEV,wBAAQQ,QAAU,SAAAC,GAAC,OAAIX,EAAmB,CACxCC,OAAQ,mNACRC,OAAQ,mBAEV,wBAAQQ,QAAS,SAAAC,GAAC,OAAIX,EAAmB,CACvCC,OAAQ,mNACRC,OAAQ,2BAMlB,wBAAQU,GAAG,eAAevB,IAAI,GAAGwB,MAAO,CAAEC,WAAY,SAAUC,MAAO,MAAOC,OAAQ,aCjE7EC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxB,SAASC,eAAe,SAM1BY,M","file":"static/js/main.7fc288f4.chunk.js","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport './Card.css';\n\nfunction MediaCard({ tokenInstance }) {\n  return (\n    <div className=\"ticketContainer\">\n      <div className=\"ticketDetails\">\n        <Typography className=\"ticketClass\" gutterBottom variant=\"h5\" component=\"h2\">\n          {tokenInstance.ticketClass.toString()}\n        </Typography>\n        <Typography className=\"ticketId\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {tokenInstance.ticketId.toString()}\n        </Typography>\n        <Typography className=\"devconId\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          Devcon ID: {tokenInstance.devconId.toString()}\n        </Typography>\n      </div>\n      <img className=\"ticketImg\" src=\"ticket_example_image.svg\"></img>\n    </div>\n  );\n}\n\nexport default MediaCard;\n","import React, { useState, useEffect } from 'react';\nimport { Negotiator } from 'token-negotiator';\nimport Card from './Card';\nimport './App.css';\n\n// A minimal example to read tokens and render them to a view.\n\nfunction App() {\n  // local State: tokens[], setTokens: Method to update the state of tokens.\n  let [tokens, setTokens] = useState([]);\n  // create instance of Negotiator.\n  const filter = {};\n  const token = \"devcon-ticket\";\n  const options = {};\n  const negotiator = new Negotiator(filter, token, options);\n  // react effect\n  useEffect(() => {\n    // on success assign tokens to react state\n    negotiator.getTokenInstances(res => {\n      if(res.success) setTokens(res.tokens);\n    });\n  }, []);\n\n  // This is for UX within the demo only (to open the ticket inside an iframe)\n  const openTicketInIframe = ({ticket, secret}) => {\n    let _iframe = document.getElementById('ticketIframe');\n    if(_iframe){\n      _iframe.src = `https://devcontickets.herokuapp.com/outlet/?ticket=${ticket}&secret=${secret}`;\n    }\n  } \n\n  return (\n    <main className=\"pageStyles\">\n      <a href=\"/\"><img className=\"logo\" src=\"./devcon.svg\"></img></a>\n      <div className=\"flexCenter\">\n        <p>[DEMO Ticket Issuer Website]</p>\n      </div>\n      <div className=\"flexCenter\">\n        <img className=\"devcon_bogota\" src=\"./devcon_bogota.svg\"></img>\n      </div>\n      <div className=\"flexCenter\">\n        <p>A Devcon ticket provides access to the event and special offers between the dates X-XX for hotel bookings, travel, restaurants and more.</p>\n      </div>\n      <div className=\"flexCenter\">\n        <p>Your tickets:</p>\n      </div>\n      <div className=\"flexCenter\">\n        <div className=\"tokensWrapper\">\n          {\n            tokens && tokens.length > 0 && tokens.map((tokenInstance, index) => {\n              return <Card key={index} tokenInstance={tokenInstance} />\n            })\n          }\n          {\n            !tokens.length && <div>\n              <b>- no ticket found -</b>\n              <p>Generate ticket:</p>\n              <button onClick={e => openTicketInIframe({\n                ticket: \"MIGbMA0CAQYCBWE3ap3-AgEABEEEKJZVxMEXbkSZZBWnNUTX_5ieu8GUqf0bx_a0tBPF6QYskABaMJBYhDOXsmQt3csk_TfMZ2wdmfRkK7ePCOI2kgNHADBEAiBwLK_95NPZo0W01HDBfyZisZ2KaNrzoWuxRV-nhjGLMAIgaOP4eVVINH5xM8Cv9OVDdyOG3BxUqyPVQOuDU9PaC9o=\",\n                secret: \"45845870684\"\n              })}></button>\n              <button onClick={e => openTicketInIframe({\n                ticket: \"MIGYMAoCAQYCAgFNAgECBEEEKJZVxMEXbkSZZBWnNUTX_5ieu8GUqf0bx_a0tBPF6QYskABaMJBYhDOXsmQt3csk_TfMZ2wdmfRkK7ePCOI2kgNHADBEAiB4thME54fWjTs1eJ5XseTPk7sqOUa9JzVsDMURBwTlJwIgChH-eU6seNnC8hVDgBvLvUJPpGWviWsQ2WwWrcC7Meg\",\n                secret: \"45845870684\"\n              })}></button>\n              <button onClick={ e => openTicketInIframe({\n                ticket: \"MIGZMAoCAQYCAgDeAgEBBEEEKJZVxMEXbkSZZBWnNUTX_5ieu8GUqf0bx_a0tBPF6QYskABaMJBYhDOXsmQt3csk_TfMZ2wdmfRkK7ePCOI2kgNIADBFAiEAy0hGTGFw_KWyk0EbDFI7y4x8LaplJ6PEPFDb-AQ82GUCIEKP4650eRZyvbgNbTcnjRLaRthc4oIFEn7FVS2nNJ6o\",\n                secret: \"45845870684\"\n              })}></button>\n              <button onClick={e => openTicketInIframe({\n                ticket: \"MIGXMAkCAQYCAW8CAQAEQQQollXEwRduRJlkFac1RNf_mJ67wZSp_RvH9rS0E8XpBiyQAFowkFiEM5eyZC3dyyT9N8xnbB2Z9GQrt48I4jaSA0cAMEQCIFavePjptmgxBsVuHp7bZSDxK0ovB8d9URp2VjiGos56AiA9apKTL6Kk74Jgf2H7Mb4EZqlsdwJLXSN23sC6aoRyKg==\",\n                secret: \"45845870684\"\n              })}></button>\n            </div>\n          }\n        </div>\n      </div>\n      <iframe id=\"ticketIframe\" src=\"\" style={{ visibility: \"hidden\", width: \"1px\", height: \"1px\" }}></iframe>\n    </main>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}