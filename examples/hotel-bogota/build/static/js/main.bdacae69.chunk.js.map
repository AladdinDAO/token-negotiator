{"version":3,"sources":["LogoCard/index.js","Card/index.js","BookingModal/index.js","RoomCard/index.js","TokenNotificationCard/index.js","EthereumLogo/index.js","DatePicker/index.js","BookingDate/index.js","App.js","reportWebVitals.js","index.js"],"names":["LogoCard","title","Card","className","CardContent","Typography","gutterBottom","variant","component","TokenCard","tokenInstance","applyDiscount","discount","isSelectedToken","ticketId","onClick","e","ticketClass","toString","color","devconId","src","BookingModal","roomType","price","tokens","book","React","useState","open","setOpen","useReducer","state","newState","reference","formInput","setFormInput","handleSubmit","evt","preventDefault","handleClose","viewPrice","value","discountTicketClasses","Button","size","Dialog","onClose","aria-labelledby","DialogTitle","disableTypography","DialogContent","onSubmit","TextField","autoFocus","margin","id","label","type","fullWidth","name","onChange","target","newValue","length","filter","_token","indexOf","map","token","index","DialogActions","disabled","useStyles","makeStyles","root","maxWidth","media","height","RoomCard","room","classes","image","frequency","CardMedia","CardActions","TokenView","tokensNumber","TokenNotificationCard","getTokens","negotiator","undefined","userPermissionStatus","setUserPermissionStatus","setPermissionEvent","bool","setUserPermission","getUserPermission","useEffect","Zoom","in","style","transitionDelay","EthereumLogo","DatePicker","handleInput","date","utils","DateFnsUtils","Grid","container","justify","disableToolbar","format","KeyboardButtonProps","BookingDate","today","Date","tomorrow","setDate","getDate","from","to","display","justifyContent","width","mockRoomData","App","Negotiator","userPermissionRequired","setTokens","freeShuttle","setFreeShuttle","roomTypesData","setRoomTypesData","setDiscount","ticket","a","form","console","log","getTokenInstances","res","success","padding","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bdacae69.chunk.js","sourcesContent":["import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport './logoCard.css';\n\n// LOGO CARD COMPONENT\n// shows the hotel title\n\nfunction LogoCard({ title }) {\n  return (\n    <Card className=\"logoCard\">\n      <CardContent className=\"cardContent\">\n        <Typography\n          gutterBottom\n          variant=\"h1\"\n          component=\"h1\"\n        >\n          {title}\n        </Typography>\n        <div className=\"logo-wrapper\">\n          <div className=\"logo-emblem\"></div>\n          <div className=\"logo-emblem\"></div>\n          <div className=\"logo-emblem\"></div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default LogoCard;\n\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport './Card.css';\n\nfunction TokenCard({ tokenInstance, applyDiscount, discount }) {\n  const isSelectedToken = (discount.tokenInstance && discount.tokenInstance.ticketId === tokenInstance.ticketId);\n  return (\n    <div onClick={e => applyDiscount(isSelectedToken ? null : tokenInstance)} className={isSelectedToken ? 'tokenCard selected' : 'tokenCard'}>\n      <div className=\"ticketDetails\">\n        <Typography className=\"ticketClass\" gutterBottom variant=\"h5\" component=\"h2\">\n          {tokenInstance.ticketClass.toString()}\n        </Typography>\n        <Typography className=\"ticketId\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {tokenInstance.ticketId.toString()}\n        </Typography>\n        <Typography className=\"devconId\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          Devcon ID: {tokenInstance.devconId.toString()}\n        </Typography>\n      </div>\n      <img className=\"ticketImg\" src=\"ticket_example_image.svg\"></img>\n    </div>\n  );\n}\n\nexport default TokenCard;\n","\nimport React, { useReducer } from \"react\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Card from './../Card';\nimport './BookingModal.css';\n\n// BOOKING MODAL COMPONENT\n// Booking form\n\nexport default function BookingModal({ roomType, applyDiscount, discount, price, tokens, book }) {\n\n  // Modal State (open boolean)\n  const [open, setOpen] = React.useState(false);\n\n  // Form state.\n  const [formInput, setFormInput] = useReducer((state, newState) => ({ ...state, ...newState }), { reference: \"\" });\n\n  // Handle form input.\n  const handleInput = evt => {\n    const name = evt.target.name;\n    const newValue = evt.target.value;\n    setFormInput({ [name]: newValue });\n  };\n\n  // Simple validation check.\n  const formIsValid = () => {\n    return !(\n      (formInput.reference.length > 0)\n    );\n  }\n\n  // handle form submission.\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    book({ formInput, roomType });\n  };\n\n  // Open Modal\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  // Close Modal\n  const handleClose = () => {\n    setOpen(false);\n  };\n  \n  // apply discount\n  const discountPerc = discount.value ? discount.value : 0;\n  const discountOfferValue = (discountPerc / 100) * price;\n  const viewPrice = price - discountOfferValue;\n\n  // example of application of tickets that can be used to apply a discount\n  const discountTicketClasses = [\"0\"];\n\n  return (\n    <div>\n      <Button\n        size=\"small\"\n        color=\"primary\"\n        onClick={handleClickOpen}\n      >\n        Book\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\">\n        <div className='modalContainer'>\n          <DialogTitle\n            className=\"title\"\n            disableTypography={true}\n          >\n            {roomType} \n          </DialogTitle>\n          <DialogTitle\n            className=\"subTitle\"\n            disableTypography={true}\n          >\n            {viewPrice} ETH per night. { discount.value ? `(${discount.value}% discount)` : \"\"}\n        </DialogTitle>\n          <DialogContent>\n            <form onSubmit={handleSubmit}>\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"booking-name\"\n                label=\"Booking check-in reference name\"\n                type=\"text\"\n                fullWidth\n                name=\"reference\"\n                onChange={handleInput}\n              />\n              <div>\n                {tokens.length > 0 && <p className=\"smallCopy\">Select a ticket to apply discount:</p>\n                }\n              </div>\n              <div className=\"ticketWrapper\">\n              {tokens &&\n                tokens\n                  .filter(_token => discountTicketClasses.toString().indexOf(_token.ticketClass) > -1)\n                  .map((token, index) => (\n                    <div key={index}>\n                      <Card\n                        applyDiscount={applyDiscount}\n                        tokenInstance={token}\n                        discount={discount}\n                      />\n                    </div>\n                  ))\n              }\n              </div>\n            </form>\n          </DialogContent>\n          <DialogActions>\n            <Button\n              onClick={handleClose}\n              color=\"primary\"\n            >\n              Cancel\n          </Button>\n            <Button\n              onClick={handleSubmit}\n              color=\"primary\"\n              disabled={formIsValid()}\n            >\n              Book Now\n          </Button>\n          </DialogActions>\n        </div>\n      </Dialog>\n    </div>\n  );\n}\n\n\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport BookingModal from './../BookingModal';\nimport Typography from '@material-ui/core/Typography';\nimport './RoomCard.css';\n\n// ROOM CARD COMPONENT\n// Shows hotel room item; image, price and option to book.\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    margin: \"20px\"\n  },\n  media: {\n    height: 140,\n  },\n});\n\nexport default function RoomCard({ room, applyDiscount, discount, tokens, book }) {\n  const classes = useStyles();\n  const { type, price, image, frequency } = room;\n  return (\n    <Card className=\"roomCard\">\n      <div>\n        <CardMedia\n          className={classes.media}\n          image={image}\n          title=\"token\"\n        />\n        <CardContent>\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n            component=\"h2\"\n          >\n            {type}\n          </Typography>\n          <Typography\n            variant=\"body2\"\n            color=\"textSecondary\"\n            component=\"p\"\n          >\n            From {price} ETH / {frequency}\n          </Typography>\n        </CardContent>\n      </div>\n      <CardActions>\n        <BookingModal\n          book={book}\n          applyDiscount={applyDiscount}\n          tokens={tokens}\n          roomType={type}\n          discount={discount}\n          price={price} />\n      </CardActions>\n    </Card>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Zoom from '@material-ui/core/Zoom';\nimport './TokenNotificationCard.css';\n\n// TOKEN NOTIFICATION CARD COMPONENT\n// show a discount if available to Devcon ticket holders.\n\n// When Access is granted this view will show\nfunction TokenView({tokensNumber}) {\n    return (\n      <Card className=\"tokenNotificationCard\">\n        <CardContent>\n          <Typography\n            gutterBottom\n            variant=\"h1\"\n            component=\"h1\"\n          >\n            {tokensNumber} Devcon Tickets\n          </Typography>\n          <Typography\n            gutterBottom\n            variant=\"body1\"\n            component=\"p\"\n          >\n            booking discounts available\n          </Typography>\n        </CardContent>\n        <div className=\"cardBottomLip\"></div>\n      </Card>\n  );\n};\n\nfunction TokenNotificationCard({ getTokens, negotiator, tokensNumber }) {\n  \n  let [userPermissionStatus, setUserPermissionStatus] = useState(undefined);\n\n  const setPermissionEvent = (bool) => {\n    // set permission inside negotiator state\n    negotiator.setUserPermission(bool);\n    // assign user permission status on change\n    setUserPermissionStatus(negotiator.getUserPermission());\n  }\n\n  // react effect\n  useEffect(() => {\n    // assign user permission status to negotiator state\n    setUserPermissionStatus(negotiator.getUserPermission());\n    // if the status is true trigger parent component \n    // event to get the tokens from the negotiator\n    if(userPermissionStatus === true) getTokens();\n    // When false hide the notification card\n    // if(userPermissionStatus === false);\n  }, [userPermissionStatus]);\n\n  return (\n    <Zoom in={true} style={{ transitionDelay: true ? '500ms' : '0ms' }}>\n      <div>\n        { userPermissionStatus && <TokenView tokensNumber={tokensNumber}></TokenView> }\n        { userPermissionStatus === undefined && <Card className=\"tokenNotificationCard\">\n          <CardContent>\n            <Typography\n              gutterBottom\n              variant=\"body1\"\n              component=\"p\"\n            >\n              Do you give permission for Devcon to connect with this website?\n            </Typography>\n            <button onClick={e => setPermissionEvent(true)}>YES</button> <button onClick={e => setPermissionEvent(false)}>NO</button>\n          </CardContent>\n          <div className=\"cardBottomLip\"></div>\n        </Card>\n      }\n      </div>\n    </Zoom>\n  );\n}\n\nexport default TokenNotificationCard;\n\n","import './EthereumLogo.css';\n\nconst EthereumLogo = () => {\n  return (\n    <div className=\"ethScale\">\n      <div id=\"space\">\n        <div className=\"elogo\">\n          <div className=\"trif u1\"></div>\n          <div className=\"trif u2\"></div>\n          <div className=\"trif u3\"></div>\n          <div className=\"trif u4\"></div>\n          <div className=\"ct\"></div>\n          <div className=\"trif l1\"></div>\n          <div className=\"trif l4\"></div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default EthereumLogo;","\n\nimport 'date-fns';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\n\n// DATE PICKER COMPONENT\n// wraps the Date picker material ui component\n\nexport default function DatePicker({ label, handleInput, date }) {\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid container justify=\"space-around\">\n        <KeyboardDatePicker\n          disableToolbar\n          variant=\"inline\"\n          format=\"dd/MM/yyyy\"\n          margin=\"normal\"\n          className=\"date-picker-inline\"\n          label={label}\n          value={date}\n          onChange={e => handleInput(e, label)}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n      </Grid>\n    </MuiPickersUtilsProvider>\n  );\n}\n","import React, { useState } from \"react\";\nimport DatePicker from './../DatePicker';\n\nconst BookingDate = () => {\n\n  var today = new Date();\n  var tomorrow = new Date();\n  tomorrow.setDate(tomorrow.getDate() + 1);\n\n  // Form state.\n  const [formInput, setFormInput] = useState({\n    from: today,\n    to: tomorrow\n  });\n\n  // Handle date change input\n  const handleInput = (newValue, label) => {\n    setFormInput({ [label]: newValue });\n  };\n\n  return (\n    <div style={{ display: 'flex', justifyContent: 'center' }}>\n      <div style={{ display: 'flex', justifyContent: 'center', width: '80%' }}>\n        <div style={{ margin: '10px' }}>\n          <DatePicker\n            name={'from'}\n            label={'from'}\n            handleInput={handleInput}\n            date={formInput.from}\n          />\n        </div>\n        <div style={{ margin: '10px' }}>\n          <DatePicker\n            name={'to'}\n            label={'to'}\n            handleInput={handleInput}\n            date={formInput.to}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default BookingDate;","import React, { useState, useEffect } from 'react';\nimport LogoCard from './LogoCard';\nimport RoomCard from './RoomCard';\nimport TokenNotificationCard from './TokenNotificationCard';\nimport Typography from '@material-ui/core/Typography';\nimport EthereumLogo from './EthereumLogo';\nimport BookingDate from './BookingDate';\nimport './App.css';\nimport { Negotiator } from 'token-negotiator';\n  \n// mock data e.g. server side hotel room price database\nconst mockRoomData = [{\"type\":\"Deluxe Room\",\"price\": 0.5,\"frequency\":\"per night\",\"image\":\"./hotel_3.jpg\"},{\"type\":\"King Suite\",\"price\": 0.4,\"frequency\":\"per night\",\"image\":\"./hotel_2.png\"},{\"type\":\"Superior Deluxe Suite\",\"price\": 0.6,\"frequency\":\"per night\",\"image\":\"./hotel_1.jpg\"}]\n// mock discount of 10% applied to any ticket selected. In a real world scenario, this maybe different per ticket type and retrieved from a backend service.\nconst mockRoomDiscountData = 10;\n\nfunction App() {\n\n    // add filters when specific tokens are required\n  const filter = {};\n  // apply the token to negotciate (load) into the page\n  const token = \"devcon-ticket\";\n  // set required negotiator options\n  const options = { \n    userPermissionRequired: true\n  };\n  // Create new instance of the Negotiator with params\n  let negotiator = new Negotiator(filter, token, options);\n\n  // Devcon Tickets (local react state of tokens)\n  let [tokens, setTokens] = useState([]);\n\n  // local react state of token specical offer\n  let [freeShuttle, setFreeShuttle] = useState(false);\n\n  // local react state of hotel room data\n  let [roomTypesData, setRoomTypesData] = useState([]);\n\n  // Selected token instance to apply discount, with the discount value on hotel booking.\n  let [discount, setDiscount] = useState({ value: undefined, tokenInstance: null });\n\n  // async example of initial hotel data loaded from source\n  const getRoomTypesData = () => {\n    return mockRoomData;\n  }\n\n  // example to return a discount\n  const getApplicableDiscount = () => {\n    return mockRoomDiscountData;\n  }\n\n  // When a ticket is present and user applies it, the discount will be shown\n  const applyDiscount = async (ticket) => {\n    if (!ticket) {\n      setDiscount({ value: undefined, tokenInstance: undefined })\n    } else {\n      setDiscount({ value: getApplicableDiscount(), tokenInstance: ticket });\n    }\n  }\n\n  // apply discount\n  const book = async (form) => {\n    // TODO add web3 transaction here to use ticket\n    // Ticket can be acquired from discount object\n    console.log(form);\n  }\n\n  // negotiation happens when this method is triggered\n  // before this time, the token-negotiator is not used.\n  const getTokens = () => {\n    negotiator.getTokenInstances(res => {\n      if(res.success){\n        setTokens(res.tokens);\n        setFreeShuttle(true);\n      }\n    });\n  }\n\n  // react effect\n  useEffect(() => {\n    // assign room data to react local state\n    setRoomTypesData(getRoomTypesData());\n  }, []);\n\n  return (\n    <div>\n      <div className=\"header\">\n        <LogoCard title={\"Hotel Bogota\"} />\n        <TokenNotificationCard getTokens={e=>getTokens()} negotiator={negotiator} tokensNumber={tokens.length} />\n      </div>\n      <BookingDate />\n      <div className=\"roomCardsContainer\">\n        {roomTypesData.map((room, index) => {\n          return <RoomCard\n            key={index}\n            room={room}\n            applyDiscount={applyDiscount}\n            discount={discount}\n            tokens={tokens}\n            book={book}\n          />\n        })}\n      </div>\n      {\n        freeShuttle &&\n        <div>\n          <EthereumLogo />\n          <Typography\n            style={{ padding: '20px' }}\n            className=\"applyDiscountCopyContainer\"\n            gutterBottom\n            variant=\"body2\"\n            component=\"p\">\n            Free shuttle service available to you as a Devcon Ticket holder! Enjoy the event.\n          </Typography>\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n\n// Trigger:\n// authenticator.webAuth(currentToken)\n// Response:\n// { object token data }\n// Request: \n// Web3 SIGN ownership of Ethereum Address\n// Response: { object proof of ownership }\n// Request [POST]:\n// authServerAPI( object token data + proof of address ownership )\n// Response:\n// True\n// End User can now use the website\n\n// Todo:\n// (1 hour) Working on the 3rd Party check - to allow Devcon to utilise the website (inject tickets)\n// (1 hour) Create mock backend Bogota/\n// github/repo/hotel-bogota-mock-backend-json-reponses\n// useTicketSuccess.json\n// useTicketError.json\n// github/repo/devcon-mock-backend-json-reponses/\n// ticketAuthenticationServerSuccess.json\n// ticketAuthenticationServerError.json\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}