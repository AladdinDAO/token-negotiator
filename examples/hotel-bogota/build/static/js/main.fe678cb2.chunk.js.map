{"version":3,"sources":["LogoCard/index.js","TokenCard/index.js","BookingModal/index.js","RoomCard/index.js","TokenNotificationCard/index.js","EthereumLogo/index.js","DatePicker/index.js","BookingDate/index.js","App.js","reportWebVitals.js","index.js"],"names":["LogoCard","title","Card","className","CardContent","Typography","gutterBottom","variant","component","useStyles","makeStyles","root","media","height","TokenCard","tokenInstance","applyDiscount","discount","classes","isSelectedToken","ticketId","CardActionArea","CardMedia","image","ticketClass","toString","onClick","e","color","devconId","BookingModal","roomType","price","tokens","book","React","useState","open","setOpen","useReducer","state","newState","reference","formInput","setFormInput","handleSubmit","evt","preventDefault","handleClose","viewPrice","value","discountTicketClasses","TicketCopy","index","Button","size","Dialog","onClose","aria-labelledby","DialogTitle","disableTypography","DialogContent","onSubmit","TextField","autoFocus","margin","id","label","type","fullWidth","name","onChange","target","newValue","filter","_token","indexOf","map","token","DialogActions","disabled","length","maxWidth","RoomCard","room","frequency","CardActions","TokenNotificationCard","tokensNumber","Zoom","in","style","transitionDelay","EthereumLogo","DatePicker","handleInput","date","utils","DateFnsUtils","Grid","container","justify","disableToolbar","format","KeyboardButtonProps","BookingDate","today","Date","tomorrow","setDate","getDate","from","to","display","justifyContent","width","mockRoomData","App","setTokens","freeShuttle","setFreeShuttle","roomTypesData","setRoomTypesData","undefined","setDiscount","negotiator","Negotiator","ticket","a","form","console","log","useEffect","getTokenInstances","res","success","position","top","right","padding","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"qXAyBeA,MAhBf,YAA8B,IAAVC,EAAS,EAATA,MAClB,OACE,cAACC,EAAA,EAAD,CAAMC,UAAU,WAAhB,SACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,cAAY,EACZC,QAAQ,KACRC,UAAU,KAHZ,SAKGP,S,0GCTLQ,G,OAAYC,YAAW,CAC3BC,KAAM,GACNC,MAAO,CACLC,OAAQ,MA+CGC,MA3Cf,YAAgE,IAA3CC,EAA0C,EAA1CA,cAAeC,EAA2B,EAA3BA,cAAeC,EAAY,EAAZA,SAC3CC,EAAUT,IACVU,EAAmBF,EAASF,eAAiBE,EAASF,cAAcK,WAAaL,EAAcK,SACrG,OACE,cAAClB,EAAA,EAAD,CAAMC,UAAWgB,EAAkB,qBAAuB,YAA1D,SACE,cAACE,EAAA,EAAD,UACE,gCACE,cAACC,EAAA,EAAD,CACEnB,UAAWe,EAAQN,MACnBW,MAAM,aACNtB,MAAM,UAEPc,GAAiBA,EAAcS,YAAYC,YAC1C,eAACrB,EAAA,EAAD,CAAasB,QAAS,SAAAC,GAAC,OAAIX,EAAcG,EAAkB,KAAOJ,IAAlE,UACE,cAACV,EAAA,EAAD,CACEC,cAAY,EACZC,QAAQ,KACRC,UAAU,KAHZ,SAKGO,EAAcS,YAAYC,aAE7B,eAACpB,EAAA,EAAD,CACEE,QAAQ,QACRqB,MAAM,gBACNpB,UAAU,IAHZ,wBAKcO,EAAcK,SAASK,cAErC,eAACpB,EAAA,EAAD,CACEE,QAAQ,QACRqB,MAAM,gBACNpB,UAAU,IAHZ,wBAKcO,EAAcc,SAASJ,yB,OCnCpC,SAASK,EAAT,GAAmF,IAA3DC,EAA0D,EAA1DA,SAAUf,EAAgD,EAAhDA,cAAeC,EAAiC,EAAjCA,SAAUe,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,KAAQ,EAGvEC,IAAMC,UAAS,GAHwD,mBAGxFC,EAHwF,KAGlFC,EAHkF,OAM7DC,sBAAW,SAACC,EAAOC,GAAR,mBAAC,eAA0BD,GAAUC,KAAa,CAAEC,UAAW,KANb,mBAMxFC,EANwF,KAM7EC,EAN6E,KAuBzFC,EAAe,SAAAC,GACnBA,EAAIC,iBACJb,EAAK,CAAES,YAAWZ,cASdiB,EAAc,WAClBV,GAAQ,IAMJW,EAAYjB,GAFGf,EAASiC,MAAQjC,EAASiC,MAAQ,GACZ,IAAOlB,EAI5CmB,EAAwB,CAAC,IAGzBC,EAAa,SAACC,GAClB,GAAc,IAAVA,EACF,OACE,mBAAGlD,UAAU,YAAb,iDAKN,OACE,gCACE,cAACmD,EAAA,EAAD,CACEC,KAAK,QACL3B,MAAM,UACNF,QA/BkB,WACtBY,GAAQ,IA2BN,kBAOA,cAACkB,EAAA,EAAD,CACEnB,KAAMA,EACNoB,QAAST,EACTU,kBAAgB,oBAHlB,SAIE,sBAAKvD,UAAU,YAAf,UACE,cAACwD,EAAA,EAAD,CACExD,UAAU,QACVyD,mBAAmB,EAFrB,SAIG7B,IAEH,eAAC4B,EAAA,EAAD,CACExD,UAAU,WACVyD,mBAAmB,EAFrB,UAIGX,EAJH,mBAI+BhC,EAASiC,MAAT,WAAqBjC,EAASiC,MAA9B,uBAA2D,MAE1F,cAACW,EAAA,EAAD,UACE,uBAAMC,SAAUjB,EAAhB,UACE,cAACkB,EAAA,EAAD,CACEC,WAAS,EACTC,OAAO,QACPC,GAAG,eACHC,MAAM,kCACNC,KAAK,OACLC,WAAS,EACTC,KAAK,YACLC,SAlFM,SAAAzB,GAClB,IAAMwB,EAAOxB,EAAI0B,OAAOF,KAClBG,EAAW3B,EAAI0B,OAAOtB,MAC5BN,EAAa,eAAG0B,EAAOG,OAiFZxC,GACCA,EACGyC,QAAO,SAAAC,GAAM,OAAIxB,EAAsByB,QAAQD,EAAOnD,cAAgB,KACtEqD,KAAI,SAACC,EAAOzB,GAAR,OACH,gCACGD,EAAWC,GACZ,cAAC,EAAD,CACErC,cAAeA,EACfD,cAAe+D,EACf7D,SAAUA,MALJoC,WAYpB,eAAC0B,EAAA,EAAD,WACE,cAACzB,EAAA,EAAD,CACE5B,QAASsB,EACTpB,MAAM,UAFR,oBAMA,cAAC0B,EAAA,EAAD,CACE5B,QAASmB,EACTjB,MAAM,UACNoD,WArGPrC,EAAUD,UAAUuC,OAAS,GAkGxB,iC,WCrHNxE,EAAYC,YAAW,CAC3BC,KAAM,CACJuE,SAAU,IACVjB,OAAQ,QAEVrD,MAAO,CACLC,OAAQ,OAIG,SAASsE,EAAT,GAAoE,IAAhDC,EAA+C,EAA/CA,KAAMpE,EAAyC,EAAzCA,cAAeC,EAA0B,EAA1BA,SAAUgB,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,KAClEhB,EAAUT,IACR2D,EAAkCgB,EAAlChB,KAAMpC,EAA4BoD,EAA5BpD,MAAOT,EAAqB6D,EAArB7D,MAAO8D,EAAcD,EAAdC,UAC5B,OACE,eAACnF,EAAA,EAAD,CAAMC,UAAU,WAAhB,UACE,gCACE,cAACmB,EAAA,EAAD,CACEnB,UAAWe,EAAQN,MACnBW,MAAOA,EACPtB,MAAM,UAER,eAACG,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,cAAY,EACZC,QAAQ,KACRC,UAAU,KAHZ,SAKG4D,IAEH,eAAC/D,EAAA,EAAD,CACEE,QAAQ,QACRqB,MAAM,gBACNpB,UAAU,IAHZ,kBAKQwB,EALR,UAKsBqD,WAI1B,cAACC,EAAA,EAAD,UACE,cAAC,EAAD,CACEpD,KAAMA,EACNlB,cAAeA,EACfiB,OAAQA,EACRF,SAAUqC,EACVnD,SAAUA,EACVe,MAAOA,S,aC9CXvB,G,OAAYC,YAAW,CAC3BC,KAAM,CACJuE,SAAU,KAEZtE,MAAO,CACLC,OAAQ,MAmCG0E,MA/Bf,YAAkD,IAAjBC,EAAgB,EAAhBA,aACzBtE,EAAUT,IAChB,OACE,cAACgF,EAAA,EAAD,CAAMC,IAAI,EAAMC,MAAO,CAAEC,gBAAwB,SAAjD,SACE,eAAC1F,EAAA,EAAD,CAAMC,UAAU,wBAAhB,UACE,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CACEC,cAAY,EACZC,QAAQ,KACRC,UAAU,KAHZ,UAKGgF,EALH,2BAOA,cAACnF,EAAA,EAAD,CACEC,cAAY,EACZC,QAAQ,QACRC,UAAU,IAHZ,4CAQF,cAACc,EAAA,EAAD,CACEnB,UAAWe,EAAQN,MACnBW,MAAM,aACNtB,MAAM,gBCzBD4F,G,OAlBM,WACnB,OACE,qBAAK1F,UAAU,WAAf,SACE,qBAAK+D,GAAG,QAAR,SACE,sBAAK/D,UAAU,QAAf,UACE,qBAAKA,UAAU,YACf,qBAAKA,UAAU,YACf,qBAAKA,UAAU,YACf,qBAAKA,UAAU,YACf,qBAAKA,UAAU,OACf,qBAAKA,UAAU,YACf,qBAAKA,UAAU,qB,kCCFV,SAAS2F,EAAT,GAAmD,IAA7B3B,EAA4B,EAA5BA,MAAO4B,EAAqB,EAArBA,YAAaC,EAAQ,EAARA,KACvD,OACE,cAAC,IAAD,CAAyBC,MAAOC,IAAhC,SACE,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,eAAxB,SACE,cAAC,IAAD,CACEC,gBAAc,EACd/F,QAAQ,SACRgG,OAAO,aACPtC,OAAO,SACP9D,UAAU,qBACVgE,MAAOA,EACPjB,MAAO8C,EACPzB,SAAU,SAAA5C,GAAC,OAAIoE,EAAYpE,EAAGwC,IAC9BqC,oBAAqB,CACnB,aAAc,qBCtB1B,IAyCeC,EAzCK,WAElB,IAAIC,EAAQ,IAAIC,KACZC,EAAW,IAAID,KACnBC,EAASC,QAAQD,EAASE,UAAY,GAJd,MAOU1E,mBAAS,CACzC2E,KAAML,EACNM,GAAIJ,IATkB,mBAOjBjE,EAPiB,KAONC,EAPM,KAalBmD,EAAc,SAACtB,EAAUN,GAC7BvB,EAAa,eAAGuB,EAAQM,KAG1B,OACE,qBAAKkB,MAAO,CAAEsB,QAAS,OAAQC,eAAgB,UAA/C,SACE,sBAAKvB,MAAO,CAAEsB,QAAS,OAAQC,eAAgB,SAAUC,MAAO,OAAhE,UACE,qBAAKxB,MAAO,CAAE1B,OAAQ,QAAtB,SACE,cAAC,EAAD,CACEK,KAAM,OACNH,MAAO,OACP4B,YAAaA,EACbC,KAAMrD,EAAUoE,SAGpB,qBAAKpB,MAAO,CAAE1B,OAAQ,QAAtB,SACE,cAAC,EAAD,CACEK,KAAM,KACNH,MAAO,KACP4B,YAAaA,EACbC,KAAMrD,EAAUqE,a,QCzBtBI,G,OAAe,CAAC,CAAC,KAAO,cAAc,MAAS,GAAI,UAAY,YAAY,MAAQ,iBAAiB,CAAC,KAAO,aAAa,MAAS,GAAI,UAAY,YAAY,MAAQ,iBAAiB,CAAC,KAAO,wBAAwB,MAAS,GAAI,UAAY,YAAY,MAAQ,mBAyG3PC,MArGf,WAAe,MAGajF,mBAAS,IAHtB,mBAGRH,EAHQ,KAGAqF,EAHA,OAMuBlF,oBAAS,GANhC,mBAMRmF,EANQ,KAMKC,EANL,OAS2BpF,mBAAS,IATpC,mBASRqF,EATQ,KASOC,EATP,OAYiBtF,mBAAS,CAAEc,WAAOyE,EAAW5G,cAAe,OAZ7D,mBAYRE,EAZQ,KAYE2G,EAZF,KAqBPC,EAAa,IAAIC,IANR,GAED,gBAEE,IAeV9G,EAAa,uCAAG,WAAO+G,GAAP,SAAAC,EAAA,sDAIlBJ,EAHGG,EAGS,CAAE7E,MAxCS,GAwCuBnC,cAAegH,GAFjD,CAAE7E,WAAOyE,EAAW5G,mBAAe4G,IAF7B,2CAAH,sDASbzF,EAAI,uCAAG,WAAO+F,GAAP,SAAAD,EAAA,sDAGXE,QAAQC,IAAIF,GAHD,2CAAH,sDAmBV,OAZAG,qBAAU,WAERP,EAAWQ,mBAAkB,SAAAC,GACxBA,EAAIC,UACJjB,EAAUgB,EAAIrG,QACduF,GAAe,OAIpBE,EAlCON,KAmCN,IAGD,gCACE,cAAC,EAAD,CAAUnH,MAAO,iBACjB,qBAAK0F,MAAO,CAAE6C,SAAU,WAAYC,IAAK,MAAOC,MAAO,QAAvD,SACGzG,EAAOgD,OAAS,GACf,cAAC,EAAD,CAAuBO,aAAcvD,EAAOgD,WAGhD,cAAC,EAAD,IACA,qBAAK9E,UAAU,qBAAf,SACGsH,EAAc5C,KAAI,SAACO,EAAM/B,GACxB,OAAO,cAAC,EAAD,CAEL+B,KAAMA,EACNpE,cAAeA,EACfC,SAAUA,EACVgB,OAAQA,EACRC,KAAMA,GALDmB,QAUTkE,GACA,gCACE,cAAC,EAAD,IACA,cAAClH,EAAA,EAAD,CACEsF,MAAO,CAAEgD,QAAS,QAClBxI,UAAU,6BACVG,cAAY,EACZC,QAAQ,QACRC,UAAU,IALZ,sGC1FKoI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.fe678cb2.chunk.js","sourcesContent":["import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport './logoCard.css';\n\n// LOGO CARD COMPONENT\n// shows the hotel title\n\nfunction LogoCard({ title }) {\n  return (\n    <Card className=\"logoCard\">\n      <CardContent>\n        <Typography\n          gutterBottom\n          variant=\"h1\"\n          component=\"h1\"\n        >\n          {title}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default LogoCard;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport './TokenCard.css';\n\nconst useStyles = makeStyles({\n  root: {},\n  media: {\n    height: 5,\n  },\n});\n\nfunction TokenCard({ tokenInstance, applyDiscount, discount }) {\n  const classes = useStyles();\n  const isSelectedToken = (discount.tokenInstance && discount.tokenInstance.ticketId === tokenInstance.ticketId);\n  return (\n    <Card className={isSelectedToken ? 'tokenCard selected' : 'tokenCard'}>\n      <CardActionArea>\n        <div>\n          <CardMedia\n            className={classes.media}\n            image=\"./mock.png\"\n            title=\"token\"\n          />\n          {tokenInstance && tokenInstance.ticketClass.toString() &&\n            <CardContent onClick={e => applyDiscount(isSelectedToken ? null : tokenInstance)}>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n                component=\"h2\"\n              >\n                {tokenInstance.ticketClass.toString()}\n              </Typography>\n              <Typography\n                variant=\"body2\"\n                color=\"textSecondary\"\n                component=\"p\"\n              >\n                Ticket Id: {tokenInstance.ticketId.toString()}\n              </Typography>\n              <Typography\n                variant=\"body2\"\n                color=\"textSecondary\"\n                component=\"p\"\n              >\n                Devcon Id: {tokenInstance.devconId.toString()}\n              </Typography>\n            </CardContent>\n          }\n        </div>\n      </CardActionArea>\n    </Card >\n  );\n}\n\nexport default TokenCard;\n","\nimport React, { useReducer } from \"react\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TokenCard from './../TokenCard';\nimport './BookingModal.css';\n\n// BOOKING MODAL COMPONENT\n// Booking form\n\nexport default function BookingModal({ roomType, applyDiscount, discount, price, tokens, book }) {\n\n  // Modal State (open boolean)\n  const [open, setOpen] = React.useState(false);\n\n  // Form state.\n  const [formInput, setFormInput] = useReducer((state, newState) => ({ ...state, ...newState }), { reference: \"\" });\n\n  // Handle form input.\n  const handleInput = evt => {\n    const name = evt.target.name;\n    const newValue = evt.target.value;\n    setFormInput({ [name]: newValue });\n  };\n\n  // Simple validation check.\n  const formIsValid = () => {\n    return !(\n      (formInput.reference.length > 0)\n    );\n  }\n\n  // handle form submission.\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    book({ formInput, roomType });\n  };\n\n  // Open Modal\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  // Close Modal\n  const handleClose = () => {\n    setOpen(false);\n  };\n  \n  // apply discount\n  const discountPerc = discount.value ? discount.value : 0;\n  const discountOfferValue = (discountPerc / 100) * price;\n  const viewPrice = price - discountOfferValue;\n\n  // example of application of tickets that can be used to apply a discount\n  const discountTicketClasses = [0n];\n\n  // Text to accompany the tickets (only shown when there are tickets)\n  const TicketCopy = (index) => {\n    if (index === 0) {\n      return (\n        <p className=\"smallCopy\">Select a ticket to apply discount:</p>\n      );\n    }\n  }\n\n  return (\n    <div>\n      <Button\n        size=\"small\"\n        color=\"primary\"\n        onClick={handleClickOpen}\n      >\n        Book\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\">\n        <div className='container'>\n          <DialogTitle\n            className=\"title\"\n            disableTypography={true}\n          >\n            {roomType} \n          </DialogTitle>\n          <DialogTitle\n            className=\"subTitle\"\n            disableTypography={true}\n          >\n            {viewPrice} ETH per night. { discount.value ? `(${discount.value}% discount applied)` : \"\"}\n        </DialogTitle>\n          <DialogContent>\n            <form onSubmit={handleSubmit}>\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"booking-name\"\n                label=\"Booking check-in reference name\"\n                type=\"text\"\n                fullWidth\n                name=\"reference\"\n                onChange={handleInput}\n              />\n              {tokens &&\n                tokens\n                  .filter(_token => discountTicketClasses.indexOf(_token.ticketClass) > -1)\n                  .map((token, index) => (\n                    <div key={index}>\n                      {TicketCopy(index)}\n                      <TokenCard\n                        applyDiscount={applyDiscount}\n                        tokenInstance={token}\n                        discount={discount}\n                      />\n                    </div>\n                  ))\n              }\n            </form>\n          </DialogContent>\n          <DialogActions>\n            <Button\n              onClick={handleClose}\n              color=\"primary\"\n            >\n              Cancel\n          </Button>\n            <Button\n              onClick={handleSubmit}\n              color=\"primary\"\n              disabled={formIsValid()}\n            >\n              Book Now\n          </Button>\n          </DialogActions>\n        </div>\n      </Dialog>\n    </div>\n  );\n}\n\n\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport BookingModal from './../BookingModal';\nimport Typography from '@material-ui/core/Typography';\nimport './RoomCard.css';\n\n// ROOM CARD COMPONENT\n// Shows hotel room item; image, price and option to book.\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    margin: \"20px\"\n  },\n  media: {\n    height: 140,\n  },\n});\n\nexport default function RoomCard({ room, applyDiscount, discount, tokens, book }) {\n  const classes = useStyles();\n  const { type, price, image, frequency } = room;\n  return (\n    <Card className=\"roomCard\">\n      <div>\n        <CardMedia\n          className={classes.media}\n          image={image}\n          title=\"token\"\n        />\n        <CardContent>\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n            component=\"h2\"\n          >\n            {type}\n          </Typography>\n          <Typography\n            variant=\"body2\"\n            color=\"textSecondary\"\n            component=\"p\"\n          >\n            From {price} ETH / {frequency}\n          </Typography>\n        </CardContent>\n      </div>\n      <CardActions>\n        <BookingModal\n          book={book}\n          applyDiscount={applyDiscount}\n          tokens={tokens}\n          roomType={type}\n          discount={discount}\n          price={price} />\n      </CardActions>\n    </Card>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Zoom from '@material-ui/core/Zoom';\nimport './TokenNotificationCard.css';\n\n// TOKEN NOTIFICATION CARD COMPONENT\n// show a discount if available to Devcon ticket holders.\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 3,\n  },\n});\n\nfunction TokenNotificationCard({ tokensNumber }) {\n  const classes = useStyles();\n  return (\n    <Zoom in={true} style={{ transitionDelay: true ? '500ms' : '0ms' }}>\n      <Card className=\"tokenNotificationCard\">\n        <CardContent>\n          <Typography\n            gutterBottom\n            variant=\"h1\"\n            component=\"h1\"\n          >\n            {tokensNumber} Devcon Tickets found\n          </Typography>\n          <Typography\n            gutterBottom\n            variant=\"body1\"\n            component=\"p\"\n          >\n            booking discounts available\n          </Typography>\n        </CardContent>\n        <CardMedia\n          className={classes.media}\n          image=\"./mock.png\"\n          title=\"token\"\n        />\n      </Card>\n    </Zoom>\n  );\n}\n\nexport default TokenNotificationCard;\n\n","import './EthereumLogo.css';\n\nconst EthereumLogo = () => {\n  return (\n    <div className=\"ethScale\">\n      <div id=\"space\">\n        <div className=\"elogo\">\n          <div className=\"trif u1\"></div>\n          <div className=\"trif u2\"></div>\n          <div className=\"trif u3\"></div>\n          <div className=\"trif u4\"></div>\n          <div className=\"ct\"></div>\n          <div className=\"trif l1\"></div>\n          <div className=\"trif l4\"></div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default EthereumLogo;","\n\nimport 'date-fns';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\n\n// DATE PICKER COMPONENT\n// wraps the Date picker material ui component\n\nexport default function DatePicker({ label, handleInput, date }) {\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid container justify=\"space-around\">\n        <KeyboardDatePicker\n          disableToolbar\n          variant=\"inline\"\n          format=\"dd/MM/yyyy\"\n          margin=\"normal\"\n          className=\"date-picker-inline\"\n          label={label}\n          value={date}\n          onChange={e => handleInput(e, label)}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n      </Grid>\n    </MuiPickersUtilsProvider>\n  );\n}\n","import React, { useState } from \"react\";\nimport DatePicker from './../DatePicker';\n\nconst BookingDate = () => {\n\n  var today = new Date();\n  var tomorrow = new Date();\n  tomorrow.setDate(tomorrow.getDate() + 1);\n\n  // Form state.\n  const [formInput, setFormInput] = useState({\n    from: today,\n    to: tomorrow\n  });\n\n  // Handle date change input\n  const handleInput = (newValue, label) => {\n    setFormInput({ [label]: newValue });\n  };\n\n  return (\n    <div style={{ display: 'flex', justifyContent: 'center' }}>\n      <div style={{ display: 'flex', justifyContent: 'center', width: '80%' }}>\n        <div style={{ margin: '10px' }}>\n          <DatePicker\n            name={'from'}\n            label={'from'}\n            handleInput={handleInput}\n            date={formInput.from}\n          />\n        </div>\n        <div style={{ margin: '10px' }}>\n          <DatePicker\n            name={'to'}\n            label={'to'}\n            handleInput={handleInput}\n            date={formInput.to}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default BookingDate;","import React, { useState, useEffect } from 'react';\nimport LogoCard from './LogoCard';\nimport RoomCard from './RoomCard';\nimport TokenNotificationCard from './TokenNotificationCard';\nimport Typography from '@material-ui/core/Typography';\nimport EthereumLogo from './EthereumLogo';\nimport BookingDate from './BookingDate';\nimport { Negotiator } from 'token-negotiator';\nimport './App.css';\n\n// mock data e.g. server side hotel room price database\nconst mockRoomData = [{\"type\":\"Deluxe Room\",\"price\": 0.5,\"frequency\":\"per night\",\"image\":\"./hotel_3.jpg\"},{\"type\":\"King Suite\",\"price\": 0.4,\"frequency\":\"per night\",\"image\":\"./hotel_2.png\"},{\"type\":\"Superior Deluxe Suite\",\"price\": 0.6,\"frequency\":\"per night\",\"image\":\"./hotel_1.jpg\"}]\n// mock discount of 10% applied to any ticket selected. In a real world scenario, this maybe different per ticket type and retrieved from a backend service.\nconst mockRoomDiscountData = 10;\n\nfunction App() {\n\n  // Devcon Tickets (local react state of tokens)\n  let [tokens, setTokens] = useState([]);\n\n  // local react state of token specical offer\n  let [freeShuttle, setFreeShuttle] = useState(false);\n\n  // local react state of hotel room data\n  let [roomTypesData, setRoomTypesData] = useState([]);\n\n  // Selected token instance to apply discount, with the discount value on hotel booking.\n  let [discount, setDiscount] = useState({ value: undefined, tokenInstance: null });\n\n  // add filters when specific tokens are required\n  const filter = {};\n  // apply the token to negotciate (load) into the page\n  const token = \"devcon-ticket\";\n  // set required negotiator options\n  const options = {};\n  // Create new instance of the Negotiator with params\n  const negotiator = new Negotiator(filter, token, options);\n  \n  // async example of initial hotel data loaded from source\n  const getRoomTypesData = () => {\n    return mockRoomData;\n  }\n\n  // example to return a discount\n  const getApplicableDiscount = () => {\n    return mockRoomDiscountData;\n  }\n\n  // When a ticket is present and user applies it, the discount will be shown\n  const applyDiscount = async (ticket) => {\n    if (!ticket) {\n      setDiscount({ value: undefined, tokenInstance: undefined })\n    } else {\n      setDiscount({ value: getApplicableDiscount(), tokenInstance: ticket });\n    }\n  }\n\n  // apply discount\n  const book = async (form) => {\n    // TODO add web3 transaction here to use ticket\n    // Ticket can be acquired from discount object\n    console.log(form);\n  }\n\n  // react effect\n  useEffect(() => {\n    // on success assign tokens / changes to react state\n    negotiator.getTokenInstances(res => {\n      if(res.success){\n         setTokens(res.tokens);\n         setFreeShuttle(true);\n      }\n    });\n    // assign room data to react local state\n    setRoomTypesData(getRoomTypesData());\n  }, []);\n\n  return (\n    <div>\n      <LogoCard title={\"Hotel Bogota\"} />\n      <div style={{ position: 'absolute', top: '0px', right: '20px' }}>\n        {tokens.length > 0 &&\n          <TokenNotificationCard tokensNumber={tokens.length} />\n        }\n      </div>\n      <BookingDate />\n      <div className=\"roomCardsContainer\">\n        {roomTypesData.map((room, index) => {\n          return <RoomCard\n            key={index}\n            room={room}\n            applyDiscount={applyDiscount}\n            discount={discount}\n            tokens={tokens}\n            book={book}\n          />\n        })}\n      </div>\n      {\n        freeShuttle &&\n        <div>\n          <EthereumLogo />\n          <Typography\n            style={{ padding: '20px' }}\n            className=\"applyDiscountCopyContainer\"\n            gutterBottom\n            variant=\"body2\"\n            component=\"p\">\n            Free shuttle service available to you as a Devcon Ticket holder! Enjoy the event.\n          </Typography>\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}