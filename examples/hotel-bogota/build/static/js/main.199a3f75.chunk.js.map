{"version":3,"sources":["LogoCard/index.js","Card/index.js","BookingModal/index.js","RoomCard/index.js","TokenNotificationCard/index.js","EthereumLogo/index.js","DatePicker/index.js","BookingDate/index.js","App.js","reportWebVitals.js","index.js","temp/Attestation/AlgorithmIdentifier.js","temp/Attestation/PublicKeyInfo.js","temp/negotiator/index.js","temp/Attestation/SignedDevonTicket.js"],"names":["LogoCard","title","Card","className","CardContent","Typography","gutterBottom","variant","component","TokenCard","tokenInstance","applyDiscount","discount","isSelectedToken","ticketId","onClick","e","ticketClass","toString","color","devconId","src","BookingModal","roomType","price","tokens","book","React","useState","open","setOpen","useReducer","state","newState","reference","cardNo","cardSort","cardCsv","formInput","setFormInput","handleInput","evt","name","target","newValue","value","handleSubmit","preventDefault","handleClose","viewPrice","discountTicketClasses","Button","size","Dialog","onClose","aria-labelledby","DialogTitle","disableTypography","DialogContent","onSubmit","style","border","padding","fontSize","display","justifyContent","textAlign","borderLeft","borderRight","borderBottom","length","filter","_token","indexOf","map","token","index","TextField","id","label","placeholder","helperText","fullWidth","margin","onChange","InputLabelProps","shrink","alignItems","marginTop","marginRight","width","height","DialogActions","disabled","useStyles","makeStyles","root","maxWidth","media","RoomCard","room","classes","type","image","frequency","CardMedia","CardActions","TokenView","tokensNumber","TokenNotificationCard","getTokens","negotiator","undefined","userPermissionStatus","setUserPermissionStatus","setPermissionEvent","bool","setUserPermission","getUserPermission","useEffect","Zoom","in","transitionDelay","EthereumLogo","DatePicker","date","utils","DateFnsUtils","Grid","container","justify","disableToolbar","format","KeyboardButtonProps","BookingDate","today","Date","tomorrow","setDate","getDate","from","to","mockRoomData","App","Negotiator","userPermissionRequired","setTokens","freeShuttle","setFreeShuttle","roomTypesData","setRoomTypesData","setDiscount","status","useTicket","ethKey","useDiscountProof","setUseDiscountProof","ticket","a","proof","useEthKey","authenticate","unEndPoint","unsignedToken","authenticationData","console","log","formData","params","bookingData","fetch","URLSearchParams","then","data","alert","negotiate","results","success","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","AlgorithmIdentifier","source","TypeError","ArrayBuffer","asn1","fromBER","this","fromSchema","result","algorithmId","getParametersValue","algorithmParams","defaultValues","schema","clearProps","compareSchema","names","algorithmIdentifier","verified","Error","algorithm","valueBlock","outputArray","push","ObjectIdentifier","asn1js","Any","Sequence","object","toJSON","JSON","stringify","memberName","memberValue","parameters","blockName","optional","PublicKeyInfo","signatureAlgorithm","publicKey","BitString","getTokenConfig","tokenId","XMLconfig","attestationOrigin","tokenOrigin","tokenUrlName","tokenSecretName","unsignedTokenDataName","tokenIdName","tokenParser","SignedDevconTicket","localStorageItemName","localStorageEthKeyItemName","options","queuedCommand","tokensOrigin","debug","hideTokensIframe","addTokenIframe","maxUNlength","UNttl","UNsecret","hasOwnProperty","isTokenOriginWebsite","currentURL","URL","window","location","href","tokensOriginURL","origin","readMagicUrl","attachPostMessageListener","event","iframeCommand","remove","tokenEvent","Event","body","dispatchEvent","parent","listenForParentMessages","bind","referrer","postMessage","iframeData","ethereum","request","method","userAddresses","message","connectMetamaskAndGetAddress","provider","ethers","providers","Web3Provider","signer","getSigner","signMessage","magicLink","iframe","createElement","opacity","appendChild","parentCommand","parentData","command","Authenticator","rawTokenData","getRawToken","base64ticket","ticketSecret","secret","authenticator","tokenObj","ticketBlob","email","magic_link","getAuthenticationBlob","res","useToken","returnTokensToParent","tokensOutput","readTokens","noTokens","decodedTokens","decodeTokens","filteredTokens","filterTokens","urlParams","search","tokenFromQuery","get","secretFromQuery","idFromQuery","isNewQueryTicket","tokenData","localStorage","setItem","Object","keys","filterKeys","forEach","fitFilter","key","o1","o2","p","storageTickets","getItem","output","parse","item","callBack","rawTokens","decodedToken","base64ToUint8array","buffer","decodedTokenData","compareObjects","tokenIframeWrap","detachPostMessageListener","listenForIframeMessages","negotiateCallback","signCallback","Promise","resolve","reject","_authenticate","error","getChallengeSigned","createIframe","x","bytes","i","endPoint","expiry","now","random","Math","floor","UN","createHmac","Expiry","randomAndExpiryAsBytes","getInt64Bytes","concat","computeHmac","parseInt","substr","storageEthKeys","ethKeys","address","toLowerCase","ethKeyIsValid","signNewChallenge","getUnpredictableNumber","domain","hostname","challenge","signMessageWithBrowserWallet","signature","msgHash","hashMessage","msgHashBytes","arrayify","recoveredAddress","recoverAddress","_negotiate","background","iframeWrap","setAttribute","base64str","split","join","Buffer","Uint8Array","atob","c","charCodeAt","listener","addEventListener","attachEvent","removeEventListener","detachEvent","DevconTicket","_valueHex","BigInt","bufferToHexCodes","Utf8String","Integer","ticketEncoded","startsWith","searchParams","commitment","publicKeyInfo","signatureValue","valueBeforeDecode","valueHex","OctetString"],"mappings":"sbA8BeA,MArBf,YAA8B,IAAVC,EAAS,EAATA,MAClB,OACE,cAACC,EAAA,EAAD,CAAMC,UAAU,WAAhB,SACE,eAACC,EAAA,EAAD,CAAaD,UAAU,cAAvB,UACE,cAACE,EAAA,EAAD,CACEC,cAAY,EACZC,QAAQ,KACRC,UAAU,KAHZ,SAKGP,IAEH,sBAAKE,UAAU,eAAf,UACE,qBAAKA,UAAU,gBACf,qBAAKA,UAAU,gBACf,qBAAKA,UAAU,yB,wGCCVM,MApBf,YAAgE,IAA3CC,EAA0C,EAA1CA,cAAeC,EAA2B,EAA3BA,cAAeC,EAAY,EAAZA,SAC3CC,EAAmBD,EAASF,eAAiBE,EAASF,cAAcI,WAAaJ,EAAcI,SACrG,OACE,sBAAKC,QAAS,SAAAC,GAAC,OAAIL,EAAcE,EAAkB,KAAOH,IAAgBP,UAAWU,EAAkB,qBAAuB,YAA9H,UACE,sBAAKV,UAAU,gBAAf,UACE,cAACE,EAAA,EAAD,CAAYF,UAAU,cAAcG,cAAY,EAACC,QAAQ,KAAKC,UAAU,KAAxE,SACGE,EAAcO,YAAYC,aAE7B,cAACb,EAAA,EAAD,CAAYF,UAAU,WAAWI,QAAQ,QAAQY,MAAM,gBAAgBX,UAAU,IAAjF,SACGE,EAAcI,SAASI,aAE1B,eAACb,EAAA,EAAD,CAAYF,UAAU,WAAWI,QAAQ,QAAQY,MAAM,gBAAgBX,UAAU,IAAjF,wBACcE,EAAcU,SAASF,iBAGvC,qBAAKf,UAAU,YAAYkB,IAAI,iC,OCLtB,SAASC,EAAT,GAAmF,IAA3DC,EAA0D,EAA1DA,SAAUZ,EAAgD,EAAhDA,cAAeC,EAAiC,EAAjCA,SAAUY,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,KAAQ,EAGvEC,IAAMC,UAAS,GAHwD,mBAGxFC,EAHwF,KAGlFC,EAHkF,OAM7DC,sBAAW,SAACC,EAAOC,GAAR,mBAAC,eAA0BD,GAAUC,KAAa,CAC7FC,UAAW,SACXC,OAAQ,cACRC,SAAU,WACVC,QAAS,QAVoF,mBAMxFC,EANwF,KAM7EC,EAN6E,KAczFC,EAAc,SAAAC,GAClB,IAAMC,EAAOD,EAAIE,OAAOD,KAClBE,EAAWH,EAAIE,OAAOE,MAC5BN,EAAa,eAAGG,EAAOE,KASnBE,EAAe,SAAAL,GACnBA,EAAIM,iBACJrB,EAAK,CAAEY,YAAWf,cASdyB,EAAc,WAClBlB,GAAQ,IAMJmB,EAAYzB,GAFGZ,EAASiC,MAAQjC,EAASiC,MAAQ,GACZ,IAAOrB,EAI5C0B,EAAwB,CAAC,KAE/B,OACE,gCACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLjC,MAAM,UACNJ,QAtBkB,WACtBe,GAAQ,IAkBN,kBAOA,cAACuB,EAAA,EAAD,CACExB,KAAMA,EACNyB,QAASN,EACTO,kBAAgB,oBAHlB,SAIE,sBAAKpD,UAAU,iBAAf,UACE,cAACqD,EAAA,EAAD,CACErD,UAAU,QACVsD,mBAAmB,EAFrB,SAIGlC,IAEH,eAACiC,EAAA,EAAD,CACErD,UAAU,WACVsD,mBAAmB,EAFrB,UAIGR,EAJH,mBAI+BrC,EAASiC,MAAT,WAAqBjC,EAASiC,MAA9B,eAAmD,MAElF,cAACa,EAAA,EAAD,UACE,uBAAMC,SAAUb,EAAhB,UACC,sBAAKc,MAAO,CAAEC,OAAQ,qBAAsBC,QAAS,WAAYC,SAAU,OAAQC,QAAS,OAAQC,eAAgB,iBAApH,UACG,qBAAKL,MAAO,CAAEM,UAAU,QAAxB,iCACA,qBAAKN,MAAO,CAAEM,UAAU,QAAxB,qCAEH,qBAAKN,MAAO,CAAEO,WAAY,qBAAsBC,YAAa,qBAAsBC,aAAc,qBAAsBP,QAAS,WAAYC,SAAU,OAAQG,UAAU,QAAxK,SACG,yCAAyB,GAAZjB,EAAb,YAEF,8BACGxB,EAAO6C,OAAS,GAAK,mBAAGnE,UAAU,YAAb,kDAGxB,qBAAKA,UAAU,gBAAf,SACCsB,GACCA,EACG8C,QAAO,SAAAC,GAAM,OAAItB,EAAsBhC,WAAWuD,QAAQD,EAAOvD,cAAgB,KACjFyD,KAAI,SAACC,EAAOC,GAAR,OACH,8BACE,cAAC,EAAD,CACEjE,cAAeA,EACfD,cAAeiE,EACf/D,SAAUA,KAJJgE,QAUhB,cAACC,EAAA,EAAD,CACEC,GAAG,eACHC,MAAM,iBACNC,YAAY,SACZnC,MAAM,SACNoC,WAAW,+CACXC,WAAS,EACTxC,KAAK,YACLyC,OAAO,SACPC,SAAU5C,EACV6C,gBAAiB,CACfC,QAAQ,KAGZ,cAACT,EAAA,EAAD,CACEC,GAAG,UACHC,MAAM,cACNG,WAAS,EACTF,YAAY,cACZnC,MAAM,cACNH,KAAK,SACLyC,OAAO,SACPC,SAAU5C,EACV6C,gBAAiB,CACfC,QAAQ,KAGZ,cAACT,EAAA,EAAD,CACEC,GAAG,YACHC,MAAM,mBACNG,WAAS,EACTF,YAAY,WACZnC,MAAM,WACNH,KAAK,WACLyC,OAAO,SACPC,SAAU5C,EACV6C,gBAAiB,CACfC,QAAQ,KAGZ,cAACT,EAAA,EAAD,CACEC,GAAG,WACHC,MAAM,MACNG,WAAS,EACTrC,MAAM,MACNmC,YAAY,MACZtC,KAAK,UACLyC,OAAO,SACPC,SAAU5C,EACV6C,gBAAiB,CACfC,QAAQ,KAGZ,sBAAK1B,MAAO,CAAEI,QAAS,OAAQuB,WAAY,WAAYtB,eAAgB,WAAYuB,UAAW,QAA9F,UACE,qBAAK5B,MAAO,CAAEzC,MAAO,OAAQ4C,SAAU,OAAQ0B,YAAa,OAA5D,4BACA,qBAAK7B,MAAO,CAAE8B,MAAO,QAASC,OAAQ,QAAUtE,IAAI,sCAI1D,qBAAKlB,UAAU,UAAf,SACA,eAACyF,EAAA,EAAD,WACE,cAACzC,EAAA,EAAD,CACEpC,QAASiC,EACT7B,MAAM,UAFR,oBAMF,cAACgC,EAAA,EAAD,CACIpC,QAAS+B,EACT3B,MAAM,UACN0E,UAvJH,EAoJD,kC,WC3KJC,EAAYC,YAAW,CAC3BC,KAAM,CACJC,SAAU,IACVd,OAAQ,QAEVe,MAAO,CACLP,OAAQ,OAIG,SAASQ,EAAT,GAAoE,IAAhDC,EAA+C,EAA/CA,KAAMzF,EAAyC,EAAzCA,cAAeC,EAA0B,EAA1BA,SAAUa,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,KAClE2E,EAAUP,IACRQ,EAAkCF,EAAlCE,KAAM9E,EAA4B4E,EAA5B5E,MAAO+E,EAAqBH,EAArBG,MAAOC,EAAcJ,EAAdI,UAC5B,OACE,eAACtG,EAAA,EAAD,CAAMC,UAAU,WAAhB,UACE,gCACE,cAACsG,EAAA,EAAD,CACEtG,UAAWkG,EAAQH,MACnBK,MAAOA,EACPtG,MAAM,UAER,eAACG,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,cAAY,EACZC,QAAQ,KACRC,UAAU,KAHZ,SAKG8F,IAEH,eAACjG,EAAA,EAAD,CACEE,QAAQ,QACRY,MAAM,gBACNX,UAAU,IAHZ,kBAKQgB,EALR,UAKsBgF,WAI1B,cAACE,EAAA,EAAD,UACE,cAAC,EAAD,CACEhF,KAAMA,EACNf,cAAeA,EACfc,OAAQA,EACRF,SAAU+E,EACV1F,SAAUA,EACVY,MAAOA,S,oBC/CjB,SAASmF,EAAT,GAAoC,IAAhBC,EAAe,EAAfA,aAChB,OACE,eAAC1G,EAAA,EAAD,CAAMC,UAAU,wBAAhB,UACE,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CACEC,cAAY,EACZC,QAAQ,KACRC,UAAU,KAHZ,UAKGoG,EALH,qBAOA,cAACvG,EAAA,EAAD,CACEC,cAAY,EACZC,QAAQ,QACRC,UAAU,IAHZ,4CAQF,qBAAKL,UAAU,qBAkDR0G,MA7Cf,YAAyE,IAAxCC,EAAuC,EAAvCA,UAAWC,EAA4B,EAA5BA,WAAYH,EAAgB,EAAhBA,aAAgB,EAEhBhF,wBAASoF,GAFO,mBAEjEC,EAFiE,KAE3CC,EAF2C,KAIhEC,EAAqB,SAACC,GAE1BL,EAAWM,kBAAkBD,GAE7BF,EAAwBH,EAAWO,sBAcrC,OAVAC,qBAAU,WAERL,EAAwBH,EAAWO,sBAGP,IAAzBL,GAA+BH,MAGjC,CAACG,IAGF,cAACO,EAAA,EAAD,CAAMC,IAAI,EAAM7D,MAAO,CAAE8D,gBAAwB,SAAjD,SACE,gCACIT,GAAwB,cAACN,EAAD,CAAWC,aAAcA,SACxBI,IAAzBC,GAAsC,eAAC/G,EAAA,EAAD,CAAMC,UAAU,wBAAhB,UACtC,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,cAAY,EACZC,QAAQ,QACRC,UAAU,IAHZ,6EAOA,wBAAQO,QAAS,SAAAC,GAAC,OAAImG,GAAmB,IAAzC,iBARF,IAQ+D,wBAAQpG,QAAS,SAAAC,GAAC,OAAImG,GAAmB,IAAzC,mBAE/D,qBAAKhH,UAAU,2BCpDVwH,G,OAlBM,WACnB,OACE,qBAAKxH,UAAU,WAAf,SACE,qBAAK2E,GAAG,QAAR,SACE,sBAAK3E,UAAU,QAAf,UACE,qBAAKA,UAAU,YACf,qBAAKA,UAAU,YACf,qBAAKA,UAAU,YACf,qBAAKA,UAAU,YACf,qBAAKA,UAAU,OACf,qBAAKA,UAAU,YACf,qBAAKA,UAAU,qB,mCCFV,SAASyH,EAAT,GAAmD,IAA7B7C,EAA4B,EAA5BA,MAAOvC,EAAqB,EAArBA,YAAaqF,EAAQ,EAARA,KACvD,OACE,cAAC,IAAD,CAAyBC,MAAOC,IAAhC,SACE,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,eAAxB,SACE,cAAC,IAAD,CACEC,gBAAc,EACd5H,QAAQ,SACR6H,OAAO,aACPjD,OAAO,SACPhF,UAAU,qBACV4E,MAAOA,EACPc,UAAU,EACVhD,MAAOgF,EACPzC,SAAU,SAAApE,GAAC,OAAIwB,EAAYxB,EAAG+D,IAC9BsD,oBAAqB,CACnB,aAAc,qBCvB1B,IAyCeC,EAzCK,WAElB,IAAIC,EAAQ,IAAIC,KACZC,EAAW,IAAID,KACnBC,EAASC,QAAQD,EAASE,UAAY,GAJd,MAOU/G,mBAAS,CACzCgH,KAAML,EACNM,GAAIJ,IATkB,mBAONlG,GAPM,WAalBC,EAAc,SAACI,EAAUmC,GAC7BxC,EAAa,eAAGwC,EAAQnC,KAG1B,OACE,qBAAKgB,MAAO,CAAEI,QAAS,OAAQC,eAAgB,UAA/C,SACE,sBAAKL,MAAO,CAAEI,QAAS,OAAQC,eAAgB,SAAUyB,MAAO,OAAhE,UACE,qBAAK9B,MAAO,CAAEuB,OAAQ,QAAtB,SACE,cAAC,EAAD,CACEzC,KAAM,OACNqC,MAAO,WACPvC,YAAaA,EACbqF,KAAM,iBAGV,qBAAKjE,MAAO,CAAEuB,OAAQ,QAAtB,SACE,cAAC,EAAD,CACEzC,KAAM,KACNqC,MAAO,YACPvC,YAAaA,EACbqF,KAAM,uB,QCxBZiB,G,OAAe,CAAC,CAAC,KAAO,cAAc,MAAS,IAAO,UAAY,YAAY,MAAQ,iBAAiB,CAAC,KAAO,aAAa,MAAS,KAAO,UAAY,YAAY,MAAQ,iBAAiB,CAAC,KAAO,wBAAwB,MAAS,OAAO,UAAY,YAAY,MAAQ,mBAgKpQC,MA5Jf,WAGE,IAQIhC,EAAa,IAAIiC,IARN,GAEC,gBAEA,CACdC,wBAAwB,IARb,EAcarH,mBAAS,IAdtB,mBAcRH,EAdQ,KAcAyH,EAdA,OAiBuBtH,oBAAS,GAjBhC,mBAiBRuH,EAjBQ,KAiBKC,EAjBL,OAoB2BxH,mBAAS,IApBpC,mBAoBRyH,EApBQ,KAoBOC,EApBP,OAuBiB1H,mBAAS,CAAEiB,WAAOmE,EAAWtG,cAAe,OAvB7D,mBAuBRE,EAvBQ,KAuBE2I,EAvBF,OA0BiC3H,mBAAS,CAAE4H,QAAQ,EAAOC,eAAWzC,EAAW0C,YAAQ1C,IA1BzF,mBA0BR2C,EA1BQ,KA0BUC,EA1BV,KAuCPjJ,EAAa,uCAAG,WAAOkJ,GAAP,eAAAC,EAAA,yDAGfD,GAAqB,OAAXA,EAHK,gBAMlBN,EAAY,CAAE1G,WAAOmE,EAAWtG,mBAAesG,IAE/C4C,EAAoB,CAAEJ,QAAQ,EAAOO,WAAO/C,EAAWgD,eAAWhD,IARhD,6BAakB,0HAblB,SAeeD,EAAWkD,aAAa,CACvDC,WAHkC,0HAIlCC,cAAeN,IAjBC,OAeZO,EAfY,OAoBlBC,QAAQC,IAAI,qBAAsBF,IAIF,IAA9BA,EAAmBZ,QACnBY,EAAmBJ,WACnBI,EAAmBL,QAKnBH,EAAoBQ,GAGpBb,EAAY,CAAE1G,MA3EO,GA2EyBnC,cAAemJ,KAlC7C,4CAAH,sDA6CbnI,EAAI,uCAAG,WAAO6I,GAAP,eAAAT,EAAA,sDAEc,2HAEnBU,EAAS,CACb5J,SAAU+I,EACVc,YAAa,CAAEF,aAIjBF,QAAQC,IAAI,mBAAoBE,GAEhCE,MAVyB,2HAUA,IAAIC,gBAAgBH,IAASI,MAAK,SAAAC,GACzDC,MAAM,kEAbG,2CAAH,sDAmCV,OALAvD,qBAAU,WAER+B,EAtFOR,KAuFN,IAGD,gCACE,sBAAK3I,UAAU,SAAf,UACE,cAAC,EAAD,CAAUF,MAAO,iBACjB,cAAC,EAAD,CAAuB6G,UAAW,SAAA9F,GAlBtC+F,EAAWgE,YAAYH,MAAK,SAAAI,GACvBA,EAAQC,UACT/B,EAAU8B,EAAQvJ,QAClB2H,GAAe,QAemCrC,WAAYA,EAAYH,aAAcnF,EAAO6C,YAEjG,cAAC,EAAD,IACA,qBAAKnE,UAAU,qBAAf,SACGkJ,EAAc3E,KAAI,SAAC0B,EAAMxB,GACxB,OAAO,cAAC,EAAD,CAELwB,KAAMA,EACNzF,cAAeA,EACfC,SAAUA,EACVa,OAAQA,EACRC,KAAMA,GALDkD,QAUTuE,GACA,gCACE,cAAC,EAAD,IACA,cAAC9I,EAAA,EAAD,CACEuD,MAAO,CAAEE,QAAS,QAClB3D,UAAU,6BACVG,cAAY,EACZC,QAAQ,QACRC,UAAU,IALZ,sGClJK0K,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BX,K,oGCRqBY,E,WAQnB,aAA0B,IAAdC,EAAa,uDAAJ,GACnB,GADuB,oBACD,iBAAXA,EACT,MAAM,IAAIC,UAAU,4CAEtB,GAAID,aAAkBE,YAAa,CACjC,IAAMC,EAAOC,QAAQJ,GACrBK,KAAKC,WAAWH,EAAKI,aAMrBF,KAAKG,YAAcC,6BACfT,EACA,eAGA,oBAAqBA,IAKvBK,KAAKK,gBAAkBD,6BACnBT,EACA,kBACAD,EAAoBY,cAAc,qB,uDA2EjCC,GAETC,qBAAWD,EAAQ,CAAC,YAAa,WAIjC,IAAMT,EAAOW,wBACXF,EACAA,EACAb,EAAoBa,OAAO,CACzBG,MAAO,CACLC,oBAAqB,YACrBN,gBAAiB,aAKvB,IAAsB,IAAlBP,EAAKc,SACP,MAAM,IAAIC,MACR,+EAKJb,KAAKG,YAAcL,EAAKI,OAAOY,UAAUC,WAAWjM,WAChD,WAAYgL,EAAKI,SAAQF,KAAKK,gBAAkBP,EAAKI,OAAO9B,U,iCAUhE,IAAM4C,EAAc,GAWpB,OATAA,EAAYC,KAAK,IAAIC,mBAAiB,CAAEzK,MAAOuJ,KAAKG,eAElD,oBAAqBH,MACrBA,KAAKK,2BAA2Bc,OAAOC,OAAQ,GAE/CJ,EAAYC,KAAKjB,KAAKK,iBAIjB,IAAIgB,WAAS,CAClB5K,MAAOuK,M,+BAUT,IAAMM,EAAS,CACbnB,YAAaH,KAAKG,aASpB,MALE,oBAAqBH,MACrBA,KAAKK,2BAA2Bc,OAAOC,OAAQ,IAE/CE,EAAOjB,gBAAkBL,KAAKK,gBAAgBkB,UAEzCD,I,8BAQDX,GAEN,OAAIA,aAA+BjB,KAAwB,IAKvDM,KAAKG,cAAgBQ,EAAoBR,cAIzC,oBAAqBH,KACnB,oBAAqBW,GAErBa,KAAKC,UAAUzB,KAAKK,mBACpBmB,KAAKC,UAAUd,EAAoBN,mBAMrC,oBAAqBM,Q,qCAhKNe,GACnB,OAAQA,GACN,IAAK,kBACH,OAAO,IAAIN,MACb,QACE,MAAM,IAAIP,MAAJ,6DACkDa,O,yCAUpCA,EAAYC,GACpC,OAAQD,GACN,IAAK,cACH,MAAuB,KAAhBC,EACT,IAAK,kBACH,OAAOA,aAAuBR,OAAOC,IACvC,QACE,MAAM,IAAIP,MAAJ,6DACkDa,O,+BAkB9B,IAAlBE,EAAiB,uDAAJ,GAMnBlB,EAAQN,6BAAmBwB,EAAY,QAAS,IAEtD,OAAO,IAAIP,WAAS,CAClB/K,KAAMoK,EAAMmB,WAAa,GACzBC,SAAUpB,EAAMoB,WAAY,EAC5BrL,MAAO,CACL,IAAIyK,mBAAiB,CAAE5K,KAAMoK,EAAMC,qBAAuB,cAC1D,IAAIS,MAAI,CAAE9K,KAAMoK,EAAML,iBAAmB,aAAcyB,UAAU,W,kHCzFpDC,E,WAQnB,aAA0B,IAAdpC,EAAa,uDAAJ,GACnB,GADuB,oBACD,iBAAXA,EACT,MAAM,IAAIC,UAAU,6DAEtB,GAAID,aAAkBE,YAAa,CACjC,IAAMC,EAAOC,kBAAQJ,GACrBK,KAAKC,WAAWH,EAAKI,aAMrBF,KAAKgC,mBAAqB5B,6BACtBT,EACA,sBAEPK,KAAKiC,UAAY7B,6BACVT,EACA,a,uDA+CGY,GAiBT,GAfAC,qBAAWD,EAAQ,CAAC,qBAAsB,eAepB,IAXTE,wBACXF,EACAA,EACAwB,EAAcxB,OAAO,CACnBG,MAAO,CACLsB,mBAAoB,qBACpBC,UAAW,gBAKRrB,SACP,MAAM,IAAIC,MACR,kF,gCA/C0B,IAAlBe,EAAiB,uDAAJ,GAMnBlB,EAAQN,6BAAmBwB,EAAY,QAAS,IAEtD,OAAO,IAAIP,WAAS,CAClB/K,KAAMoK,EAAMmB,WAAa,GACzBC,UAAU,EACVrL,MAAO,CACXiJ,IAAoBa,OACnBG,EAAMsB,oBAAsB,CAC1BtB,MAAO,CACRmB,UAAW,wBAIP,IAAIK,YAAU,CAAE5L,KAAM,qB,+IC7ExB6L,EAAiB,SAACC,GACtB,IAAIC,EAAY,GAiBhB,MAfgB,kBAAZD,EACFC,EAAY,CACVC,kBAAmB,+BACnBC,YAAa,8CACbC,aAAc,SACdC,gBAAiB,SACjBC,sBAAuB,SACvBC,YAAa,KACbC,YAAaC,IACbC,qBAAsB,WACtBC,2BAA4B,aAG9B9E,QAAQC,IAAI,mDAEPmE,GAGIzF,EAAb,WAEE,aAAgF,IAAD,OAAnEzE,EAAmE,uDAA1D,GAAIiK,EAAsD,uCAA7CY,EAA6C,uDAAnC,CAAEnG,wBAAwB,GAAS,oBAExEuF,GAASnE,QAAQC,IAAI,+CAK1B,IAAImE,EAAYF,EAAeC,GAmC/B,GAhCApC,KAAKnD,uBAAyBmG,EAAQnG,uBAGtCmD,KAAKnF,sBAAwBmI,EAAQnG,6BAAgCjC,EAErEoF,KAAKiD,eAAgB,EACrBjD,KAAK7H,OAASA,EAEd6H,KAAKkD,aAAeb,EAAUE,YAC9BvC,KAAKmD,MAAQ,EACbnD,KAAKoD,iBAAmB,EACxBpD,KAAKuC,YAAcF,EAAUE,YAC7BvC,KAAKsC,kBAAoBD,EAAUC,kBACnCtC,KAAKwC,aAAeH,EAAUG,aAC9BxC,KAAKyC,gBAAkBJ,EAAUI,gBACjCzC,KAAK2C,YAAcN,EAAUM,YAC7B3C,KAAK0C,sBAAwBL,EAAUK,sBACvC1C,KAAK4C,YAAcP,EAAUO,YAC7B5C,KAAK8C,qBAAuBT,EAAUS,qBACtC9C,KAAK+C,2BAA6BV,EAAUU,2BAC5C/C,KAAKqD,eAAiB,KAEtBrD,KAAKsD,YAAc,EACnBtD,KAAKuD,MAAQ,KACbvD,KAAKwD,SAAW,qBAEZR,EAAQS,eAAe,WAAUzD,KAAKmD,MAAQH,EAAQG,OACtDH,EAAQS,eAAe,uBAAsBzD,KAAKsC,kBAAoBU,EAAQV,mBAC9EU,EAAQS,eAAe,iBAAgBzD,KAAKuC,YAAcS,EAAQT,aAEtEvC,KAAK0D,sBAAuB,EAExB1D,KAAKsC,kBAAmB,CAE1B,IAAIqB,EAAa,IAAIC,IAAIC,OAAOC,SAASC,MACrCC,EAAkB,IAAIJ,IAAI5D,KAAKkD,cAE/BS,EAAWM,SAAWD,IAGxBhE,KAAK0D,sBAAuB,EAC5B1D,KAAKkE,gBAGPlE,KAAKmE,2BAA0B,SAAAC,GAC7B,GAAIA,EAAMH,SAAWD,EAAgBC,QAGjCG,EAAM3F,KAAK4F,eAA6C,WAA5BD,EAAM3F,KAAK4F,eAA8B,EAAKhB,eAAgB,CAC5F,EAAKA,eAAeiB,SACpB,IAAMC,EAAa,IAAIC,MAAM,iBAC7BhF,SAASiF,KAAKC,cAAcH,OAQlC,GAAIV,SAAWA,OAAOc,OAAQ,CAC5B3E,KAAKmD,OAASlF,QAAQC,IAAI,4DAG1B8B,KAAKmE,0BAA0BnE,KAAK4E,wBAAwBC,KAAK7E,OAGjE,IAAI8E,EAAW,IAAIlB,IAAIpE,SAASsF,UAChCjB,OAAOc,OAAOI,YAAY,CAAEV,cAAe,cAAeW,WAAY,IAAMF,EAASb,SA/E3F,8LAsFSJ,OAAOoB,SAtFhB,sBAuFY,IAAIpE,MAAM,mCAvFtB,uBA2FgCgD,OAAOoB,SAASC,QAAQ,CAAEC,OAAQ,wBA3FlE,WA2FUC,EA3FV,SA4F2BA,EAAclN,OA5FzC,sBA6FY,IAAI2I,MAAM,0BA7FtB,gCAgGWuE,EAAc,IAhGzB,6LAmGqCC,GAnGrC,yFAoGUrF,KAAKsF,+BApGf,cAsGQC,EAAW,IAAIC,IAAOC,UAAUC,aAAa7B,OAAOoB,UACpDU,EAASJ,EAASK,YAvG1B,SAwGiBD,EAAOE,YAAYR,GAxGpC,2LA2GwBS,GACpB7H,QAAQC,IAAI,iCAAmC4H,GAI/C,IAAMC,EAASvG,SAASwG,cAAc,UACtChG,KAAKqD,eAAiB0C,EACtBA,EAAO9Q,IAAM6Q,EACbC,EAAOvO,MAAM8B,MAAQ,MACrByM,EAAOvO,MAAM+B,OAAS,MACtBwM,EAAOvO,MAAMyO,QAAU,EAKvBzG,SAASiF,KAAKyB,YAAYH,KA1H9B,wCA8HoB/K,GAChBgF,KAAKnF,qBAAuBG,IA/HhC,0CAoII,OAAOgF,KAAKnF,uBApIhB,8CAuI0BuJ,GAGtB,IAAIU,EAAW,IAAIlB,IAAIpE,SAASsF,UAChC,GAAIV,EAAMH,SAAWa,EAASb,QAQQ,qBAA7BG,EAAM3F,KAAK0H,eACkB,qBAA1B/B,EAAM3F,KAAK2H,WAFvB,CAQA,IAAIC,EAAUjC,EAAM3F,KAAK0H,cAGrB1H,EAAO2F,EAAM3F,KAAK2H,WAItB,OAFAnI,QAAQC,IAAI,2BAA4BmI,EAAS5H,GAEzC4H,GACN,IAAK,YAEH,GAAoC,qBAAzBxC,OAAOyC,cAEhB,YADArI,QAAQC,IAAI,8BAId,IAAIqI,EAAevG,KAAKwG,YAAY/H,GAEhCgI,EAAeF,EAAahO,MAC5BmO,EAAeH,EAAaI,OAChC3G,KAAK4G,cAAgB,IAAIN,cAActG,MAEvC,IAAI6G,EAAW,CACbC,WAAYL,EACZC,aAAcA,EACdpE,kBAAmBtC,KAAKsC,mBAEtBiE,GAAgBA,EAAa7N,KAAImO,EAASE,MAAQR,EAAa7N,IAC/D6N,GAAgBA,EAAaS,aAAYH,EAASf,UAAYS,EAAaS,YAE/EhH,KAAK4G,cAAcK,sBAAsBJ,GACvC,SAAAK,GACEjJ,QAAQC,IAAI,eAAgBgJ,GAC5BrD,OAAOc,OAAOI,YAAY,CAAEV,cAAe,eAAgBW,WAAY,CAAEmC,SAAUD,EAAK7B,QAAS,GAAIxG,UAAWqI,IAASpC,EAASb,WAEtI,MACF,IAAK,aAGHjE,KAAKoH,2BAhMb,6CAwMI,IAAItC,EAAW,IAAIlB,IAAIpE,SAASsF,UAChCjB,OAAOc,OAAOI,YAAY,CAAEV,cAAe,aAAcW,WAAY,QAAUF,EAASb,UAzM5F,0CA6MI,IAAIa,EAAW,IAAIlB,IAAIpE,SAASsF,UAChCjB,OAAOc,OAAOI,YAAY,CAAEV,cAAe,aAAcW,WAAY,QAAUF,EAASb,UA9M5F,6CAkNI,IAAIoD,EAAerH,KAAKsH,aACxB,GAAID,EAAaxI,UAAYwI,EAAaE,SAAU,CAClD,IAAIC,EAAgBxH,KAAKyH,aAAaJ,EAAahS,QAC/CqS,EAAiB1H,KAAK2H,aAAaH,GACvCH,EAAahS,OAASqS,EAExB,IAAI5C,EAAW,IAAIlB,IAAIpE,SAASsF,UAChCjB,OAAOc,OAAOI,YAAY,CAAEV,cAAe,aAAcW,WAAYqC,GAAgBvC,EAASb,UAzNlG,qCA6NI,IAAM2D,EAAY,IAAIrJ,gBAAgBsF,OAAOC,SAAS+D,QAChDC,EAAiBF,EAAUG,IAAI/H,KAAKwC,cACpCwF,EAAkBJ,EAAUG,IAAI/H,KAAKyC,iBACrCwF,EAAcL,EAAUG,IAAI/H,KAAK2C,aAEvC,GAAMmF,GAAkBE,EAAxB,CAKA,IAAIX,EAAerH,KAAKsH,aACpBjS,EAAS,GAET6S,GAAmB,EA2BvB,GAzBKb,EAAaE,WAEhBlS,EAASgS,EAAahS,QAEfiD,KAAI,SAAA6P,GACLA,EAAU5P,QAAUuP,IACtBI,GAAmB,MAQrBA,GACF7S,EAAO4L,KAAK,CACV1I,MAAOuP,EACPnB,OAAQqB,EACRtP,GAAIuP,EACJjB,WAAYnD,OAAOC,SAASC,OAIhCqE,aAAaC,QAAQrI,KAAK8C,qBAAsBtB,KAAKC,UAAUpM,IAE3DwO,SAAWA,OAAOc,OAAQ,CAC5B3E,KAAKmD,OAASlF,QAAQC,IAAI,yCAG1B,IAAI4G,EAAW,IAAIlB,IAAIpE,SAASsF,UAChCjB,OAAOc,OAAOI,YAAY,CAAEV,cAAe,WAAaS,EAASb,YA1QvE,mCAiReuD,GAA6B,IAAD,OAAbrP,EAAa,uDAAJ,GACD,GAA9BmQ,OAAOC,KAAKpQ,GAAQD,SACtBC,EAAS6H,KAAK7H,QAEhB,IAAI+O,EAAM,GACV,GACEM,EAActP,QACO,kBAAXC,GACPmQ,OAAOC,KAAKpQ,GAAQD,OACvB,CACA,IAAIsQ,EAAaF,OAAOC,KAAKpQ,GAY7B,OAXAqP,EAAciB,SAAQ,SAAAlQ,GACpB,IAAImQ,EAAY,EAChB,EAAKvF,OAASlF,QAAQC,IAAI,cAAe3F,GACzCiQ,EAAWC,SAAQ,SAAAE,GACbpQ,EAAMoQ,GAAK7T,YAAcqD,EAAOwQ,GAAK7T,aAAY4T,EAAY,MAE/DA,IACFxB,EAAIjG,KAAK1I,GACT,EAAK4K,OAASlF,QAAQC,IAAI,cAAe3F,OAGtC2O,EAEP,OAAOM,IAzSb,qCA6SiBoB,EAAIC,GACjB,IAAK,IAAIC,KAAKF,EACZ,GAAIA,EAAGnF,eAAeqF,IAChBF,EAAGE,GAAGhU,aAAe+T,EAAGC,GAAGhU,WAC7B,OAAO,EAIb,IAAK,IAAIgU,KAAKD,EACZ,GAAIA,EAAGpF,eAAeqF,IAChBF,EAAGE,GAAGhU,aAAe+T,EAAGC,GAAGhU,WAC7B,OAAO,EAIb,OAAO,IA5TX,mCAiUI,IAAMiU,EAAiBX,aAAaY,QAAQhJ,KAAK8C,sBAC7CzN,EAAS,GACT4T,EAAS,CAAE5T,OAAQ,GAAIkS,UAAU,EAAM1I,SAAS,GACpD,IACMkK,GAAkBA,EAAe7Q,SAGb,KADtB7C,EAASmM,KAAK0H,MAAMH,IACT7Q,QAGT7C,EAAOoT,SAAQ,SAAAU,GACTA,EAAK5Q,OAAS4Q,EAAKxC,QACrBsC,EAAO5T,OAAO4L,KAAKkI,MAQrBF,EAAO5T,OAAO6C,SAChB+Q,EAAO1B,UAAW,IAGtB,MAAO3S,GACPqJ,QAAQC,IAAI,qCACY,oBAAbkL,WACTH,EAAOpK,SAAU,GAGrB,OAAOoK,IA/VX,kCAkWclL,GAAgB,IAAD,OACrBsJ,EAAerH,KAAKsH,aACxB,GAAID,EAAaxI,UAAYwI,EAAaE,SAAU,CAClD,IAAI8B,EAAYhC,EAAahS,OAEzBkD,GAAQ,EAsBZ,OApBI8Q,EAAUnR,QACZmR,EAAUZ,SAAQ,SAAAN,GAChB,GAAIA,EAAU5P,MAAO,CAEnB,IAAI+Q,EAAe,IAAI,EAAK1G,YAAY,EAAK2G,mBAAmBpB,EAAU5P,OAAOiR,QACjF,GAAIF,GAAgBA,EAAa,EAAK5G,uBAAwB,CAC5D,IAAI+G,EAAmBH,EAAa,EAAK5G,uBAErC,EAAKgH,eAAeD,EAAkB1L,KACxCxF,EAAQ4P,SAKZlK,QAAQC,IAAI,gCAMX3F,KA7Xb,8CAiY0B6L,GAItB,IAAIJ,EAAkB,IAAIJ,IAAI5D,KAAKkD,cAGnC,GAAIkB,EAAMH,SAAWD,EAAgBC,QAQC,qBAA7BG,EAAM3F,KAAK4F,eACkB,qBAA1BD,EAAM3F,KAAKuG,WAFvB,CASA,IAAIqB,EAAUjC,EAAM3F,KAAK4F,cAGrB5F,EAAO2F,EAAM3F,KAAKuG,WAItB,OAFA/G,QAAQC,IAAI,2BAA4BmI,EAAS5H,GAEzC4H,GACN,IAAK,aACS,QAAR5H,EACFuB,KAAK2J,gBAAgBnS,MAAMI,QAAU,QACpB,QAAR6G,IACTuB,KAAK2J,gBAAgBnS,MAAMI,QAAU,QAEvC,MACF,IAAK,aAEHoI,KAAK4J,0BAA0B5J,KAAK6J,yBAEpC7J,KAAK2J,gBAAgBrF,SAEjB7F,EAAKI,UAAYJ,EAAK8I,WACxB9I,EAAKpJ,OAAS2K,KAAK2H,aAAalJ,EAAKpJ,SAEvC2K,KAAK8J,kBAAkBrL,GACvB,MAEF,IAAK,eAEHuB,KAAK2J,gBAAgBrF,SAErBtE,KAAK+J,cAAgB/J,KAAK+J,aAAatL,GACvCuB,KAAK+J,cAAe,EACpB,MAEF,IAAK,cACC3F,GAASA,EAAMzE,SACjByE,EAAMzE,OAAOoF,YAAY/E,KAAKiD,cAAemB,EAAMH,QACnDjE,KAAKiD,cAAgB,QA9b/B,sCA0c6C,IAAD,OAA5BlF,EAA4B,EAA5BA,cAAeD,EAAa,EAAbA,WAC3B,OAAO,IAAIkM,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,SAAAxM,EAAA,sEACX,EAAKyM,cAAcpM,EAAeD,GAAY,SAACH,EAAOyM,GAC1D,IAAKzM,IAAU,EAAKC,UAAW,OAAOsM,EAAOE,GAC7CH,EAAQ,CAAEtM,QAAOC,UAAW,EAAKA,UAAWR,QAAQ,OAHrC,2CAAZ,2DA3cX,6EAodsBW,EAAeD,EAAYiM,GApdjD,8EAqdI9L,QAAQC,IAAI,2DArdhB,kBAwdwB8B,KAAKqK,qBAxd7B,OAwdMzM,EAxdN,8DA0dMmM,EAAa,KAAD,MA1dlB,2BA8dI9L,QAAQC,IAAI,YAAaN,GAEzBoC,KAAKpC,UAAYA,EAEjBoC,KAAK+J,aAAeA,EAEpB/J,KAAKiD,cAAgB,CAAEkD,cAAe,YAAaC,WAAYrI,GAC/DiC,KAAKsK,eAreT,wJAwegBC,GACZ,IAAIC,EAAQ,GACRC,EAAI,EACR,GACED,IAAQC,GAAU,IAALF,EACbA,IAAS,QACFE,GACT,OAAOD,IA/eX,sFAkf+BE,GAlf/B,gFAqfUC,EAASvO,KAAKwO,MAAqB,IAAb5K,KAAKuD,MAC7BsH,EAASC,KAAKC,MAAMD,KAAKD,SAALC,KAAA,IAAiB,GAAM9K,KAAKsD,cAtfxD,kBAwfW,CACL0H,GAAIH,EAAO/V,WAAakL,KAAKiL,WAAWJ,EAAQF,GAChDO,OAAQP,IA1fd,wIA8faE,EAAQF,GACjB,IAAIQ,EAAyBnL,KAAKoL,cAAcP,GAAQQ,OAAOrL,KAAKoL,cAAcT,IAClF,OAAOnF,IAAO9J,MAAM4P,YAAY,SAAUtL,KAAKwD,SAAU2H,KAhgB7D,oCAmgBgB7N,GACZ,IAAIuN,EAASU,SAASjO,EAAO0N,GAAGQ,OAAO,EAAGlO,EAAO0N,GAAG9S,OAAS,KAE7D,OADW8H,KAAKiL,WAAWJ,EAAQvN,EAAOqN,UAC7BrN,EAAO0N,GAAGQ,OAAOlO,EAAO0N,GAAG9S,OAAS,OAC7CoF,EAAOqN,OAASvO,KAAKwO,SAvgB7B,kFA2gB2B9M,GA3gB3B,oFA6gBU2N,EAAiBrD,aAAaY,QAAQhJ,KAAK+C,4BAI/C2I,EADED,GAAkBA,EAAevT,OACzBsJ,KAAK0H,MAAMuC,GAEX,GAnhBhB,SAshBwBzL,KAAKsF,+BAthB7B,UAuhBIqG,GADIA,EAthBR,QAuhBsBC,cAIdF,GAAWA,EAAQC,KAAa3L,KAAK6L,cAAcH,EAAQC,MAC7D1N,QAAQC,IAAI,mCACLwN,EAAQC,KAGbD,IAAWA,EAAQC,GAhiB3B,iBAiiBM/N,EAAY8N,EAAQC,GAjiB1B,yCAmiBwB3L,KAAK8L,iBAAiBhO,GAniB9C,SAmiBMF,EAniBN,UAqiBQ8N,EAAQ9N,EAAU+N,QAAQC,eAAiBhO,EAC3CwK,aAAaC,QAAQrI,KAAK+C,2BAA4BvB,KAAKC,UAAUiK,KAtiB7E,iCAyiBW9N,GAziBX,wLA4iByBE,GA5iBzB,uGA6iBiCkC,KAAK+L,uBAAuBjO,GA7iB7D,uBA6iBYkN,EA7iBZ,EA6iBYA,GAAIE,EA7iBhB,EA6iBgBA,OAENc,EAASnI,OAAOC,SAASmI,SAEzBC,EAjjBV,2CAijB0DF,EAjjB1D,yDAijBiHhB,EAAGlW,WAjjBpH,sBAmjB0BkL,KAAKmM,6BAA6BD,GAnjB5D,cAmjBQE,EAnjBR,OAojBUC,EAAU7G,IAAO9J,MAAM4Q,YAAYJ,GACnCK,EAAe/G,IAAO9J,MAAM8Q,SAASH,GAErCI,EAAmBjH,IAAO9J,MAAMgR,eAAeH,EAAcH,GAvjBvE,kBAyjBW,CACLT,QAASc,EACT9B,OAAQO,EACRgB,YACAE,YACApB,OA9jBN,0IAkkBe,IAAD,OACV,OAAO,IAAIhB,SAAQ,SAACC,EAASC,GAC3B,EAAKyC,YAAW,SAACtX,GACf,IAAKA,EAAQ,OAAO6U,GAAO,GAC3BD,EAAQ5U,WAtkBhB,0CA2kBuB,IAAD,OAClB,OAAO,IAAI2U,SAAQ,SAACC,EAASC,GAC3B,EAAKyC,YAAW,SAACtX,GACf,IAAKA,EAAQ,OAAO6U,GAAO,GAC3BD,EAAQ5U,WA/kBhB,iCAolBa+T,GAET,IAAkC,IAA9BpJ,KAAKnF,qBACP,OAAO,EAIT,GAFAmF,KAAK8J,kBAAoBV,EAErBpJ,KAAKsC,kBAIP,GAFArE,QAAQC,IAAI,oBAAqB8B,KAAKsC,mBAElCuB,OAAOC,SAASC,OAAS/D,KAAKkD,aAAc,CAE9C,IAAImE,EAAerH,KAAKsH,aACxB,GAAID,EAAaxI,UAAYwI,EAAaE,SAAU,CAClD,IAAIC,EAAgBxH,KAAKyH,aAAaJ,EAAahS,QAC/CqS,EAAiB1H,KAAK2H,aAAaH,GACvCH,EAAahS,OAASqS,EACtB1H,KAAK8J,kBAAkBzC,SAGzBrH,KAAKiD,cAAgB,CAAEkD,cAAe,aAAcC,WAAY,IAChEpG,KAAKsK,oBAGPrM,QAAQC,IAAI,6BA7mBlB,qCAmnBID,QAAQC,IAAI,sBAEZ8B,KAAKmE,0BAA0BnE,KAAK6J,wBAAwBhF,KAAK7E,OAEjE,IAAM+F,EAASvG,SAASwG,cAAc,UACtChG,KAAK+F,OAASA,EACdA,EAAO9Q,IAAM+K,KAAKkD,aAClB6C,EAAOvO,MAAM8B,MAAQ,QACrByM,EAAOvO,MAAM+B,OAAS,QACtBwM,EAAOvO,MAAMqC,SAAW,OACxBkM,EAAOvO,MAAMoV,WAAa,OAC1B,IAAIC,EAAarN,SAASwG,cAAc,OACxChG,KAAK2J,gBAAkBkD,EACvBA,EAAWC,aAAa,QAAS,mJACjCD,EAAW3G,YAAYH,GACvBvG,SAASiF,KAAKyB,YAAY2G,KAloB9B,yCAqoBqBE,GAYjB,OAVAA,EAAYA,EAAUC,MAAM,KAAKC,KAAK,KACnCD,MAAM,KAAKC,KAAK,KAChBD,MAAM,KAAKC,KAAK,KAGG,qBAAXC,EACHC,WAAW3Q,KAAK0Q,EAAO1Q,KAAKuQ,EAAW,WAEvCI,WAAW3Q,KAAK4Q,KAAKL,IAAY,SAAAM,GAAC,OAAIA,EAAEC,WAAW,QA/oB/D,mCAopBejE,GAAY,IAAD,OAClBrJ,KAAKmD,QACPlF,QAAQC,IAAI,sBACZD,QAAQC,IAAImL,IAEd,IAAI7B,EAAgB,GAYpB,OAXI6B,EAAUnR,QACZmR,EAAUZ,SAAQ,SAAAN,GAChB,GAAIA,EAAU5P,MAAO,CACnB,IAAI+Q,EAAe,IAAI,EAAK1G,YAAY,EAAK2G,mBAAmBpB,EAAU5P,OAAOiR,QAC7EF,GAAgBA,EAAa,EAAK5G,wBAAwB8E,EAAcvG,KAAKqI,EAAa,EAAK5G,6BAEnGzE,QAAQC,IAAI,gCAKXsJ,IArqBX,gDAwqB4B+F,GACpB1J,OAAO2J,iBACT3J,OAAO2J,iBAAiB,UAAWD,GAAU,GAG7C1J,OAAO4J,YAAY,YAAaF,KA7qBtC,gDAgrB4BA,GACpB1J,OAAO2J,iBACT3J,OAAO6J,oBAAoB,UAAWH,GAAU,GAGhD1J,OAAO8J,YAAY,YAAaJ,OArrBtC,O,0JCZaK,EAAb,WAQE,aAA0B,IAAdjO,EAAa,uDAAJ,GACnB,GADuB,oBACA,iBAAXA,EACV,MAAM,IAAIC,UAAU,4CAEtB,GAAID,aAAkBE,YAAa,CACjC,IAAMC,EAAOC,kBAAQJ,GACrBK,KAAKC,WAAWH,EAAKI,aAErBF,KAAKhL,SAAWoL,6BACZT,EACA,YAEJK,KAAKtL,SAAW0L,6BACZT,EACA,YAEJK,KAAKnL,YAAcuL,6BACfT,EACA,eA1BV,uDAuDaY,GAETC,qBAAWD,EAAQ,CAEjB,WACA,WACA,gBAKF,IAAMT,EAAOW,wBAAcF,EAAQA,EAAQqN,EAAarN,UAExD,IAAsB,IAAlBT,EAAKc,SACP,MAAM,IAAIC,MAAM,wEAWlB,GAJI,aAAcf,EAAKI,SACrBF,KAAKhL,SAAW8K,EAAKI,OAAL,SAAwBa,WAAWtK,OAGjD,aAAcqJ,EAAKI,OAAQ,CAC7B,IAAMxL,EAAWoL,EAAKI,OAAL,SAAwBa,WAAW8M,UACpD7N,KAAKtL,SAAWoZ,OAAO,KAAOC,2BAAiBrZ,IAGjD,GAAI,gBAAiBoL,EAAKI,OAAQ,CAChC,IAAMrL,EAAciL,EAAKI,OAAL,YAA2Ba,WAAW8M,UAC1D7N,KAAKnL,YAAciZ,OAAO,KAAOC,2BAAiBlZ,QAvFxD,gCA+BkC,IAAlB+M,EAAiB,uDAAJ,GACnBlB,EAAQN,6BAAmBwB,EAAY,QAAS,IAEtD,OAAO,IAAIP,WAAS,CAClB/K,KAAMoK,EAAMmB,WAAa,SACzBpL,MAAO,CACL,IAAIuX,aAAW,CACb1X,KAAMoK,EAAM1L,UAAY,aAE1B,IAAIiZ,UAAQ,CACV3X,KAAMoK,EAAMhM,UAAY,aAE1B,IAAIuZ,UAAQ,CACV3X,KAAMoK,EAAM7L,aAAe,uBA5CrC,KA8FagO,EAAb,WAQE,aAA0B,IAAdlD,EAAa,uDAAJ,GACnB,GADuB,oBACD,iBAAXA,EAAqB,CAE9B,IAAMuO,EAAiBvO,EAAOwO,WAAW,YACpC,IAAIvK,IAAIjE,GAASyO,aAAarG,IAAI,UAAYpI,EAE/CoN,EAAYmB,EACXlB,MAAM,KAAKC,KAAK,KAChBD,MAAM,KAAKC,KAAK,KAChBD,MAAM,KAAKC,KAAK,KAInBtN,EADoB,qBAAXuN,EACAC,WAAW3Q,KAAK0Q,EAAO1Q,KAAKuQ,EAAW,WAAWvD,OAElD2D,WAAW3Q,KAAK4Q,KAAKL,IAAY,SAAAM,GAAC,OAAIA,EAAEC,WAAW,MAAI9D,OAKpE,GAAI7J,aAAkBE,YAAa,CACjC,IAAMC,EAAOC,kBAAQJ,GACrBK,KAAKC,WAAWH,EAAKI,aAErBF,KAAKvC,OAAS,IAAImQ,EAAajO,EAAOlC,QAEtCuC,KAAKqO,WAAajO,6BACdT,EACA,cAMPK,KAAKsO,cAAgB,IAAIvM,IAAcpC,EAAO2O,eAE3CtO,KAAKuO,eAAiBnO,6BAClBT,EACA,kBA9CV,uDAgHaY,GAETC,qBAAWD,EAAQ,CAEjB,SACA,aAEH,gBACG,mBAKF,IAAMT,EAAOW,wBAAcF,EAAQA,EAAQsC,EAAmBtC,UAE9D,IAAsB,IAAlBT,EAAKc,SACX,MAAM,IAAIC,MAAM,8EAOdb,KAAKvC,OAAS,IAAImQ,EAAa9N,EAAKI,OAAOzC,OAAO+Q,mBAE9C,eAAgB1O,EAAKI,SACvBF,KAAKqO,WAAavO,EAAKI,OAAL,WAA0Ba,WAAW0N,UAI5DzO,KAAKsO,cAAgB,IAAIvM,IAAc,CAClCxB,OAAQT,EAAKI,OAAOoO,gBAGtB,IAAMC,EAAiBzO,EAAKI,OAAOqO,eACnCvO,KAAKuO,eAAiBA,EAAexN,WAAW0N,YAnJpD,gCAkEkC,IAAlB7M,EAAiB,uDAAJ,GAOnBlB,EAAQN,6BAAmBwB,EAAY,QAAS,IAEtD,OAAO,IAAIP,WAAS,CAClB/K,KAAMoK,EAAMmB,WAAa,qBACzBpL,MAAO,CACLmX,EAAarN,OAAOqB,GACpB,IAAI8M,cAAY,CACdpY,KAAM,eAqBR,IAAI4L,YAAU,CACZ5L,KAAM,0BAtGhB,O","file":"static/js/main.199a3f75.chunk.js","sourcesContent":["import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport './logoCard.css';\n\n// LOGO CARD COMPONENT\n// shows the hotel title\n\nfunction LogoCard({ title }) {\n  return (\n    <Card className=\"logoCard\">\n      <CardContent className=\"cardContent\">\n        <Typography\n          gutterBottom\n          variant=\"h1\"\n          component=\"h1\"\n        >\n          {title}\n        </Typography>\n        <div className=\"logo-wrapper\">\n          <div className=\"logo-emblem\"></div>\n          <div className=\"logo-emblem\"></div>\n          <div className=\"logo-emblem\"></div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default LogoCard;\n\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport './Card.css';\n\nfunction TokenCard({ tokenInstance, applyDiscount, discount }) {\n  const isSelectedToken = (discount.tokenInstance && discount.tokenInstance.ticketId === tokenInstance.ticketId);\n  return (\n    <div onClick={e => applyDiscount(isSelectedToken ? null : tokenInstance)} className={isSelectedToken ? 'tokenCard selected' : 'tokenCard'}>\n      <div className=\"ticketDetails\">\n        <Typography className=\"ticketClass\" gutterBottom variant=\"h5\" component=\"h2\">\n          {tokenInstance.ticketClass.toString()}\n        </Typography>\n        <Typography className=\"ticketId\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {tokenInstance.ticketId.toString()}\n        </Typography>\n        <Typography className=\"devconId\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          Devcon ID: {tokenInstance.devconId.toString()}\n        </Typography>\n      </div>\n      <img className=\"ticketImg\" src=\"ticket_example_image.svg\"></img>\n    </div>\n  );\n}\n\nexport default TokenCard;\n","\nimport React, { useReducer } from \"react\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Card from './../Card';\nimport './BookingModal.css';\n\n// BOOKING MODAL COMPONENT\n// Booking form\n\nexport default function BookingModal({ roomType, applyDiscount, discount, price, tokens, book }) {\n\n  // Modal State (open boolean)\n  const [open, setOpen] = React.useState(false);\n\n  // Form state.\n  const [formInput, setFormInput] = useReducer((state, newState) => ({ ...state, ...newState }), { \n    reference: \"Beeple\",\n    cardNo: \"00000000000\", \n    cardSort: \"00-00-00\",\n    cardCsv: \"000\"\n  });\n\n  // Handle form input.\n  const handleInput = evt => {\n    const name = evt.target.name;\n    const newValue = evt.target.value;\n    setFormInput({ [name]: newValue });\n  };\n\n  // Simple validation check.\n  const formIsDisabled = () => {\n    return false;\n  }\n\n  // handle form submission.\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    book({ formInput, roomType });\n  };\n\n  // Open Modal\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  // Close Modal\n  const handleClose = () => {\n    setOpen(false);\n  };\n  \n  // apply discount\n  const discountPerc = discount.value ? discount.value : 0;\n  const discountOfferValue = (discountPerc / 100) * price;\n  const viewPrice = price - discountOfferValue;\n\n  // example of application of tickets that can be used to apply a discount\n  const discountTicketClasses = [\"0\"];\n\n  return (\n    <div>\n      <Button\n        size=\"small\"\n        color=\"primary\"\n        onClick={handleClickOpen}\n      >\n        Book\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\">\n        <div className='modalContainer'>\n          <DialogTitle\n            className=\"title\"\n            disableTypography={true}\n          >\n            {roomType} \n          </DialogTitle>\n          <DialogTitle\n            className=\"subTitle\"\n            disableTypography={true}\n          >\n            {viewPrice} COP per night. { discount.value ? `(${discount.value}% discount)` : \"\"}\n        </DialogTitle>\n          <DialogContent>\n            <form onSubmit={handleSubmit}>\n             <div style={{ border: \"1px solid darkcyan\", padding: \"7px 12px\", fontSize: \"14px\", display: \"flex\", justifyContent: \"space-between\" }}>\n                <div style={{ textAlign:\"left\" }}>check in 01/08/2021</div>\n                <div style={{ textAlign:\"left\" }}>check out 15/08/2021</div>\n             </div>\n             <div style={{ borderLeft: \"1px solid darkcyan\", borderRight: \"1px solid darkcyan\", borderBottom: \"1px solid darkcyan\", padding: \"7px 12px\", fontSize: \"14px\", textAlign:\"left\" }}>\n                <div>Total { viewPrice * 14 } COP</div>\n             </div>\n              <div>\n                {tokens.length > 0 && <p className=\"smallCopy\">Select a ticket to apply discount:</p>\n                }\n              </div>\n              <div className=\"ticketWrapper\">\n              {tokens &&\n                tokens\n                  .filter(_token => discountTicketClasses.toString().indexOf(_token.ticketClass) > -1)\n                  .map((token, index) => (\n                    <div key={index}>\n                      <Card\n                        applyDiscount={applyDiscount}\n                        tokenInstance={token}\n                        discount={discount}\n                      />\n                    </div>\n                  ))\n              }\n              </div>\n              <TextField\n                id=\"booking-name\"\n                label=\"Reference name\"\n                placeholder=\"Beeple\"\n                value=\"Beeple\"\n                helperText=\"(a check-in reference name for your booking)\"\n                fullWidth\n                name=\"reference\"\n                margin=\"normal\"\n                onChange={handleInput}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n              <TextField\n                id=\"card-no\"\n                label=\"Card Number\"\n                fullWidth\n                placeholder=\"00000000000\"\n                value=\"00000000000\"\n                name=\"cardNo\"\n                margin=\"normal\"\n                onChange={handleInput}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n              <TextField\n                id=\"card-sort\"\n                label=\"Card Sort Number\"\n                fullWidth\n                placeholder=\"00-00-00\"\n                value=\"00-00-00\"\n                name=\"cardSort\"\n                margin=\"normal\"\n                onChange={handleInput}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n              <TextField\n                id=\"card-csv\"\n                label=\"CSV\"\n                fullWidth\n                value=\"000\"\n                placeholder=\"000\"\n                name=\"cardCsv\"\n                margin=\"normal\"\n                onChange={handleInput}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n              <div style={{ display: \"flex\", alignItems: \"flex-end\", justifyContent: \"flex-end\", marginTop: \"12px\" }}>\n                <div style={{ color: \"grey\", fontSize: \"12px\", marginRight: \"5px\" }}>cards accepted</div>\n                <img style={{ width: \"100px\", height: \"24px\" }} src=\"./cards-accepted-demo.png\"></img>\n              </div>\n            </form>\n          </DialogContent>\n          <div className=\"booking\">\n          <DialogActions>\n            <Button\n              onClick={handleClose}\n              color=\"primary\"\n            >\n              Cancel\n          </Button>\n          <Button\n              onClick={handleSubmit}\n              color=\"primary\"\n              disabled={formIsDisabled()}\n            >\n              Pay Now\n          </Button>\n          </DialogActions>\n        </div>\n        </div>\n      </Dialog>\n    </div>\n  );\n}\n\n\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport BookingModal from './../BookingModal';\nimport Typography from '@material-ui/core/Typography';\nimport './RoomCard.css';\n\n// ROOM CARD COMPONENT\n// Shows hotel room item; image, price and option to book.\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    margin: \"20px\"\n  },\n  media: {\n    height: 140,\n  },\n});\n\nexport default function RoomCard({ room, applyDiscount, discount, tokens, book }) {\n  const classes = useStyles();\n  const { type, price, image, frequency } = room;\n  return (\n    <Card className=\"roomCard\">\n      <div>\n        <CardMedia\n          className={classes.media}\n          image={image}\n          title=\"token\"\n        />\n        <CardContent>\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n            component=\"h2\"\n          >\n            {type}\n          </Typography>\n          <Typography\n            variant=\"body2\"\n            color=\"textSecondary\"\n            component=\"p\"\n          >\n            From {price} COP / {frequency}\n          </Typography>\n        </CardContent>\n      </div>\n      <CardActions>\n        <BookingModal\n          book={book}\n          applyDiscount={applyDiscount}\n          tokens={tokens}\n          roomType={type}\n          discount={discount}\n          price={price} />\n      </CardActions>\n    </Card>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Zoom from '@material-ui/core/Zoom';\nimport './TokenNotificationCard.css';\n\n// TOKEN NOTIFICATION CARD COMPONENT\n// show a discount if available to Devcon ticket holders.\n\n// When Access is granted this view will show\nfunction TokenView({tokensNumber}) {\n    return (\n      <Card className=\"tokenNotificationCard\">\n        <CardContent>\n          <Typography\n            gutterBottom\n            variant=\"h1\"\n            component=\"h1\"\n          >\n            {tokensNumber} Devcon Tickets\n          </Typography>\n          <Typography\n            gutterBottom\n            variant=\"body1\"\n            component=\"p\"\n          >\n            booking discounts available\n          </Typography>\n        </CardContent>\n        <div className=\"cardBottomLip\"></div>\n      </Card>\n  );\n};\n\nfunction TokenNotificationCard({ getTokens, negotiator, tokensNumber }) {\n  \n  let [userPermissionStatus, setUserPermissionStatus] = useState(undefined);\n\n  const setPermissionEvent = (bool) => {\n    // set permission inside negotiator state\n    negotiator.setUserPermission(bool);\n    // assign user permission status on change\n    setUserPermissionStatus(negotiator.getUserPermission());\n  }\n\n  // react effect\n  useEffect(() => {\n    // assign user permission status to negotiator state\n    setUserPermissionStatus(negotiator.getUserPermission());\n    // if the status is true trigger parent component \n    // event to get the tokens from the negotiator\n    if(userPermissionStatus === true) getTokens();\n    // When false hide the notification card\n    // if(userPermissionStatus === false);\n  }, [userPermissionStatus]);\n\n  return (\n    <Zoom in={true} style={{ transitionDelay: true ? '500ms' : '0ms' }}>\n      <div>\n        { userPermissionStatus && <TokenView tokensNumber={tokensNumber}></TokenView> }\n        { userPermissionStatus === undefined && <Card className=\"tokenNotificationCard\">\n          <CardContent>\n            <Typography\n              gutterBottom\n              variant=\"body1\"\n              component=\"p\"\n            >\n              Do you give permission for Devcon to connect with this website?\n            </Typography>\n            <button onClick={e => setPermissionEvent(true)}>YES</button> <button onClick={e => setPermissionEvent(false)}>NO</button>\n          </CardContent>\n          <div className=\"cardBottomLip\"></div>\n        </Card>\n      }\n      </div>\n    </Zoom>\n  );\n}\n\nexport default TokenNotificationCard;\n\n","import './EthereumLogo.css';\n\nconst EthereumLogo = () => {\n  return (\n    <div className=\"ethScale\">\n      <div id=\"space\">\n        <div className=\"elogo\">\n          <div className=\"trif u1\"></div>\n          <div className=\"trif u2\"></div>\n          <div className=\"trif u3\"></div>\n          <div className=\"trif u4\"></div>\n          <div className=\"ct\"></div>\n          <div className=\"trif l1\"></div>\n          <div className=\"trif l4\"></div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default EthereumLogo;","\n\nimport 'date-fns';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\n\n// DATE PICKER COMPONENT\n// wraps the Date picker material ui component\n\nexport default function DatePicker({ label, handleInput, date }) {\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid container justify=\"space-around\">\n        <KeyboardDatePicker\n          disableToolbar\n          variant=\"inline\"\n          format=\"dd/MM/yyyy\"\n          margin=\"normal\"\n          className=\"date-picker-inline\"\n          label={label}\n          disabled={true}\n          value={date}\n          onChange={e => handleInput(e, label)}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n      </Grid>\n    </MuiPickersUtilsProvider>\n  );\n}\n","import React, { useState } from \"react\";\nimport DatePicker from './../DatePicker';\n\nconst BookingDate = () => {\n\n  var today = new Date();\n  var tomorrow = new Date();\n  tomorrow.setDate(tomorrow.getDate() + 1);\n\n  // Form state.\n  const [formInput, setFormInput] = useState({\n    from: today,\n    to: tomorrow\n  });\n\n  // Handle date change input\n  const handleInput = (newValue, label) => {\n    setFormInput({ [label]: newValue });\n  };\n\n  return (\n    <div style={{ display: 'flex', justifyContent: 'center' }}>\n      <div style={{ display: 'flex', justifyContent: 'center', width: '80%' }}>\n        <div style={{ margin: '10px' }}>\n          <DatePicker\n            name={'from'}\n            label={'check in'}\n            handleInput={handleInput}\n            date={\"08/01/2021\"}\n          />\n        </div>\n        <div style={{ margin: '10px' }}>\n          <DatePicker\n            name={'to'}\n            label={'check out'}\n            handleInput={handleInput}\n            date={\"08/15/2021\"}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default BookingDate;","import React, { useState, useEffect } from 'react';\nimport LogoCard from './LogoCard';\nimport RoomCard from './RoomCard';\nimport TokenNotificationCard from './TokenNotificationCard';\nimport Typography from '@material-ui/core/Typography';\nimport EthereumLogo from './EthereumLogo';\nimport BookingDate from './BookingDate';\n// import { Negotiator } from 'token-negotiator';\nimport { Negotiator } from './temp/negotiator';\nimport './App.css';\n  \n// mock data e.g. server side hotel room price database\nconst mockRoomData = [{\"type\":\"Deluxe Room\",\"price\": 200000,\"frequency\":\"per night\",\"image\":\"./hotel_3.jpg\"},{\"type\":\"King Suite\",\"price\": 320000,\"frequency\":\"per night\",\"image\":\"./hotel_2.png\"},{\"type\":\"Superior Deluxe Suite\",\"price\": 250030,\"frequency\":\"per night\",\"image\":\"./hotel_1.jpg\"}]\n// mock discount of 10% applied to any ticket selected. In a real world scenario, this maybe different per ticket type and retrieved from a backend service.\nconst mockRoomDiscountData = 10;\n\nfunction App() {\n\n  // add filters when specific tokens are required\n  const filter = {};\n  // apply the tokenId to negotiate tokens from e.g. devcon-ticket.\n  const tokenId = \"devcon-ticket\";\n  // set required negotiator options\n  const options = { \n    userPermissionRequired: true\n  };\n  // Create new instance of the Negotiator with params\n  let negotiator = new Negotiator(filter, tokenId, options);\n\n  // Devcon Tickets (local react state of tokens)\n  let [tokens, setTokens] = useState([]);\n\n  // local react state of token specical offer\n  let [freeShuttle, setFreeShuttle] = useState(false);\n\n  // local react state of hotel room data\n  let [roomTypesData, setRoomTypesData] = useState([]);\n\n  // Selected token instance to apply discount, with the discount value on hotel booking.\n  let [discount, setDiscount] = useState({ value: undefined, tokenInstance: null });\n\n  // Token proof\n  let [useDiscountProof, setUseDiscountProof] = useState({ status: false, useTicket: undefined, ethKey: undefined });\n\n  // async example of initial hotel data loaded from source\n  const getRoomTypesData = () => {\n    return mockRoomData;\n  }\n\n  // example to return a discount\n  const getApplicableDiscount = () => {\n    return mockRoomDiscountData;\n  }\n\n  // When a ticket is present and user applies it, the discount will be shown\n  const applyDiscount = async (ticket) => {\n\n    // When unselecting the ticket (removes room discounts offered)\n    if (!ticket || ticket === null) {\n      \n      // clear discount\n      setDiscount({ value: undefined, tokenInstance: undefined });\n      // clear discount proof data\n      setUseDiscountProof({ status: false, proof: undefined, useEthKey: undefined });\n\n    } else {\n\n      // endpoint to get an unpredictable number (mock example)\n      const unpredicatbleNumberEndPoint = \"https://raw.githubusercontent.com/TokenScript/token-negotiator/main/examples/hotel-bogota/mockbackend-responses/un.json\";\n      // authenticate discount ticket is valid\n      const authenticationData = await negotiator.authenticate({\n        unEndPoint: unpredicatbleNumberEndPoint, \n        unsignedToken: ticket\n      });\n\n      console.log(\"authenticationData\", authenticationData);\n\n      // when the ticket is valid and validation data is present\n      if(\n        authenticationData.status === true &&\n        authenticationData.useEthKey &&\n        authenticationData.proof\n      ) {\n\n        // store token proof details in react state for later.\n        // authenticationData: { status, useTicket, ethKey }\n        setUseDiscountProof(authenticationData);\n        \n        // share discount price via react state with the user inside react view.\n        setDiscount({ value: getApplicableDiscount(), tokenInstance: ticket });\n\n      } else {\n\n        // handle scenario when the authentication process for discount is not valid.\n\n      }\n    }\n  }\n\n  // This is the example point at which the hotel would send payment with booking & discount details\n  const book = async (formData) => {\n\n    const checkoutEndPoint = \"https://raw.githubusercontent.com/TokenScript/token-negotiator/main/examples/hotel-bogota/mockbackend-responses/pay.json\";\n\n    const params = {\n      discount: useDiscountProof,\n      bookingData: { formData }\n    }\n\n    // data for backend to validate discount\n    console.log(\"useDiscountProof\", params);\n\n    fetch(checkoutEndPoint + new URLSearchParams(params)).then(data => {\n      alert('Transaction Complete, we look forward to your stay with us!');\n    });\n  \n  }\n\n  // negotiation happens when this method is triggered\n  // before this time, the token-negotiator is not used.\n  const getTokens = () => {\n    negotiator.negotiate().then(results => {\n      if(results.success){\n        setTokens(results.tokens);\n        setFreeShuttle(true);\n      }\n    });\n  }\n\n  // react effect\n  useEffect(() => {\n    // assign room data to react local state\n    setRoomTypesData(getRoomTypesData());\n  }, []);\n\n  return (\n    <div>\n      <div className=\"header\">\n        <LogoCard title={\"Hotel Bogota\"} />\n        <TokenNotificationCard getTokens={e=>getTokens()} negotiator={negotiator} tokensNumber={tokens.length} />\n      </div>\n      <BookingDate />\n      <div className=\"roomCardsContainer\">\n        {roomTypesData.map((room, index) => {\n          return <RoomCard\n            key={index}\n            room={room}\n            applyDiscount={applyDiscount}\n            discount={discount}\n            tokens={tokens}\n            book={book}\n          />\n        })}\n      </div>\n      {\n        freeShuttle &&\n        <div>\n          <EthereumLogo />\n          <Typography\n            style={{ padding: '20px' }}\n            className=\"applyDiscountCopyContainer\"\n            gutterBottom\n            variant=\"body2\"\n            component=\"p\">\n            Free shuttle service available to you as a Devcon Ticket holder! Enjoy the event.\n          </Typography>\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { Any, compareSchema, ObjectIdentifier, Sequence } from \"asn1js\";\nimport { getParametersValue, clearProps } from \"pvutils\";\n//**************************************************************************************\n/**\n * Class from RFC5280\n */\nexport default class AlgorithmIdentifier {\n  //**********************************************************************************\n  /**\n   * Constructor for AlgorithmIdentifier class\n   * @param {Object} [source={}]\n   * @param {Object} [source.schema] asn1js parsed value to initialize the class from\n   * @property {string} [algorithmId] ObjectIdentifier for algorithm (string representation)\n   */\n  constructor(source = {}) {\n    if (typeof(source) == \"string\") {\n      throw new TypeError(\"Unimplemented: Not accepting string yet.\")\n    }\n    if (source instanceof ArrayBuffer) {\n      const asn1 = fromBER(source)\n      this.fromSchema(asn1.result);\n    } else {\n      /**\n       * @type {string}\n       * @desc ObjectIdentifier for algorithm (string representation)\n       */\n      this.algorithmId = getParametersValue(\n          source,\n          \"algorithmId\"\n      );\n\n      if (\"algorithmParams\" in source)\n        /**\n         * @type {Object}\n         * @desc Any algorithm source\n         */\n        this.algorithmParams = getParametersValue(\n            source,\n            \"algorithmParams\",\n            AlgorithmIdentifier.defaultValues(\"algorithmParams\")\n        );\n    }\n  }\n  //**********************************************************************************\n  /**\n   * Return default values for all class members\n   * @param {string} memberName String name for a class member\n   */\n   /* FIXME: algorithmParams is options hence not removed and we need to complete this with all parameters with their default value covered here.\n   */\n  static defaultValues(memberName) {\n    switch (memberName) {\n      case \"algorithmParams\":\n        return new Any();\n      default:\n        throw new Error(\n          `Invalid member name for AlgorithmIdentifier class: ${memberName}`\n        );\n    }\n  }\n  //**********************************************************************************\n  /**\n   * Compare values with default values for all class members\n   * @param {string} memberName String name for a class member\n   * @param {*} memberValue Value to compare with default value\n   */\n  static compareWithDefault(memberName, memberValue) {\n    switch (memberName) {\n      case \"algorithmId\":\n        return memberValue === \"\";\n      case \"algorithmParams\":\n        return memberValue instanceof asn1js.Any;\n      default:\n        throw new Error(\n          `Invalid member name for AlgorithmIdentifier class: ${memberName}`\n        );\n    }\n  }\n  //**********************************************************************************\n  /**\n   * Return value of pre-defined ASN.1 schema for current class\n   *\n   * ASN.1 schema:\n   * ```asn1\n   * AlgorithmIdentifier  ::=  Sequence  {\n   *    algorithm               OBJECT IDENTIFIER,\n   *    parameters              ANY DEFINED BY algorithm OPTIONAL  }\n   * ```\n   *\n   * @param {Object} parameters Input parameters for the schema\n   * @returns {Object} asn1js schema object\n   */\n  static schema(parameters = {}) {\n    /**\n     * @type {Object}\n     * @property {string} algorithmIdentifier ObjectIdentifier for the algorithm\n     * @property {string} algorithmParams Any algorithm parameters\n     */\n    const names = getParametersValue(parameters, \"names\", {});\n\n    return new Sequence({\n      name: names.blockName || \"\",\n      optional: names.optional || false,\n      value: [\n        new ObjectIdentifier({ name: names.algorithmIdentifier || \"algorithm\" }),\n        new Any({ name: names.algorithmParams || \"parameters\", optional: true }),\n      ],\n    });\n  }\n  //**********************************************************************************\n  /**\n   * Convert parsed asn1js object into current class\n   * @param {!Object} schema\n   */\n  fromSchema(schema) {\n    //region Clear input data first\n    clearProps(schema, [\"algorithm\", \"params\"]);\n    //endregion\n\n    //region Check the schema is valid\n    const asn1 = compareSchema(\n      schema,\n      schema,\n      AlgorithmIdentifier.schema({\n        names: {\n          algorithmIdentifier: \"algorithm\",\n          algorithmParams: \"params\",\n        },\n      })\n    );\n\n    if (asn1.verified === false)\n      throw new Error(\n        \"Object's schema was not verified against input data for AlgorithmIdentifier\"\n      );\n    //endregion\n\n    //region Get internal properties from parsed schema\n    this.algorithmId = asn1.result.algorithm.valueBlock.toString();\n    if (\"params\" in asn1.result) this.algorithmParams = asn1.result.params;\n    //endregion\n  }\n  //**********************************************************************************\n  /**\n   * Convert current object to asn1js object and set correct values\n   * @returns {Object} asn1js object\n   */\n  toSchema() {\n    //region Create array for output sequence\n    const outputArray = [];\n\n    outputArray.push(new ObjectIdentifier({ value: this.algorithmId }));\n    if (\n      \"algorithmParams\" in this &&\n      this.algorithmParams instanceof asn1js.Any === false\n    )\n      outputArray.push(this.algorithmParams);\n    //endregion\n\n    //region Construct and return new ASN.1 schema for this object\n    return new Sequence({\n      value: outputArray,\n    });\n    //endregion\n  }\n  //**********************************************************************************\n  /**\n   * Convertion for the class to JSON object\n   * @returns {Object}\n   */\n  toJSON() {\n    const object = {\n      algorithmId: this.algorithmId,\n    };\n\n    if (\n      \"algorithmParams\" in this &&\n      this.algorithmParams instanceof asn1js.Any === false\n    )\n      object.algorithmParams = this.algorithmParams.toJSON();\n\n    return object;\n  }\n  //**********************************************************************************\n  /**\n   * Check that two \"AlgorithmIdentifiers\" are equal\n   * @param {AlgorithmIdentifier} algorithmIdentifier\n   * @returns {boolean}\n   */\n  isEqual(algorithmIdentifier) {\n    //region Check input type\n    if (algorithmIdentifier instanceof AlgorithmIdentifier === false)\n      return false;\n    //endregion\n\n    //region Check \"algorithm_id\"\n    if (this.algorithmId !== algorithmIdentifier.algorithmId) return false;\n    //endregion\n\n    //region Check \"algorithm_params\"\n    if (\"algorithmParams\" in this) {\n      if (\"algorithmParams\" in algorithmIdentifier)\n        return (\n          JSON.stringify(this.algorithmParams) ===\n          JSON.stringify(algorithmIdentifier.algorithmParams)\n        );\n\n      return false;\n    }\n\n    if (\"algorithmParams\" in algorithmIdentifier) return false;\n    //endregion\n\n    return true;\n  }\n  //**********************************************************************************\n}\n//**************************************************************************************\n","import {\n  BitString,\n  compareSchema,\n  Integer,\n  OctetString,\n  Sequence,\n  fromBER,\n  Any,\n  ObjectIdentifier\n} from \"asn1js\";\nimport { getParametersValue, clearProps } from \"pvutils\";\nimport AlgorithmIdentifier from \"./AlgorithmIdentifier.js\";\n//**************************************************************************************\n/**\n * Class from RFC5280\n */\nexport default class PublicKeyInfo {\n  //**********************************************************************************\n  /**\n   * Constructor for PublicKeyInfo class\n   * @param {Object} [source={}]\n   * @param {Object} [source.schema] asn1js parsed value to initialize the class from\n   * @property {string} [algorithmId] ObjectIdentifier for algorithm (string representation)\n   */\n  constructor(source = {}) {\n    if (typeof(source) == \"string\") {\n      throw new TypeError(\"Not accepting string. For base64, convert to ArrayBuffer.\")\n    }\n    if (source instanceof ArrayBuffer) {\n      const asn1 = fromBER(source)\n      this.fromSchema(asn1.result);\n    } else {\n      /**\n       * @type {string}\n       * @desc ObjectIdentifier for algorithm (string representation)\n       */\n      this.signatureAlgorithm = getParametersValue(\n          source,\n          \"signatureAlgorithm\"\n      );\n\t  this.publicKey = getParametersValue(\n          source,\n          \"publicKey\"\n      );\n    }\n  }\n \n  //**********************************************************************************\n  /**\n   * Return value of pre-defined ASN.1 schema for current class\n   *\n   * ASN.1 schema:\n   * ```asn1\n   * PublicKeyInfo  ::=  Sequence  {\n   *    signatureAlgorithm               AlgorithmIdentifier,\n   *    publicKey              BIT-STRING  }\n   * ```\n   *\n   * @param {Object} parameters Input parameters for the schema\n   * @returns {Object} asn1js schema object\n   */\n  static schema(parameters = {}) {\n    /**\n     * @type {Object}\n     * @property {string} signatureAlgorithm ObjectIdentifier for the algorithm\n     * @property {string} publicKey Any algorithm parameters\n     */\n    const names = getParametersValue(parameters, \"names\", {});\n\n    return new Sequence({\n      name: names.blockName || \"\",\n      optional: true,\n      value: [\n\t\tAlgorithmIdentifier.schema(\n\t\t\tnames.signatureAlgorithm || {\n\t\t\t  names: {\n\t\t\t\tblockName: \"signatureAlgorithm\",\n\t\t\t  },\n\t\t\t}\n\t\t),\n        new BitString({ name: \"publicKey\"}),\n      ],\n    });\n  }\n  //**********************************************************************************\n  /**\n   * Convert parsed asn1js object into current class\n   * @param {!Object} schema\n   */\n  fromSchema(schema) {\n    //region Clear input data first\n    clearProps(schema, [\"signatureAlgorithm\", \"publicKey\"]);\n    //endregion\n\n    //region Check the schema is valid\n    const asn1 = compareSchema(\n      schema,\n      schema,\n      PublicKeyInfo.schema({\n        names: {\n          signatureAlgorithm: \"signatureAlgorithm\",\n          publicKey: \"publicKey\",\n        },\n      })\n    );\n\n    if (asn1.verified === false)\n      throw new Error(\n        \"Object's schema was not verified against input data for AlgorithmIdentifier\"\n      );\n    //endregion\n  }\n}\n//**************************************************************************************\n","import { SignedDevconTicket } from './../Attestation/SignedDevonTicket';\nimport { ethers } from \"ethers\";\n\nconst getTokenConfig = (tokenId) => {\n  let XMLconfig = {};\n  // this will come from a lookup table at a later stage.\n  if (tokenId === \"devcon-ticket\") {\n    XMLconfig = {\n      attestationOrigin: \"https://stage.attestation.id\",\n      tokenOrigin: \"https://devcontickets.herokuapp.com/outlet/\",\n      tokenUrlName: 'ticket',\n      tokenSecretName: 'secret',\n      unsignedTokenDataName: 'ticket',\n      tokenIdName: 'id',\n      tokenParser: SignedDevconTicket,\n      localStorageItemName: 'dcTokens',\n      localStorageEthKeyItemName: 'dcEthKeys',\n    };\n  } else {\n    console.log(\"Negotiator: missing token script for this token\");\n  }\n  return XMLconfig;\n}\n\nexport class Negotiator {\n\n  constructor(filter = {}, tokenId, options = { userPermissionRequired: false }) {\n\n    if (!tokenId) console.log(\"Negotiator: tokenId is a required parameter\");\n\n    // The XML config is used to define the token configuration.\n    // This includes how the ticket will confirm its vailidity and the origin\n    // of where the ticket was issued from.\n    let XMLconfig = getTokenConfig(tokenId);\n    // When True, the negoticator will require userPermissionStatus to be true to\n    // read and provide tokens to client.\n    this.userPermissionRequired = options.userPermissionRequired;\n    // When userPermissionRequired is false, this flag defaults to true. Where \n    // no permission (input from user) is required.\n    this.userPermissionStatus = !options.userPermissionRequired ? true : undefined;\n    // TODO annotate the usage of variables below.\n    this.queuedCommand = false;\n    this.filter = filter;\n    //\n    this.tokensOrigin = XMLconfig.tokenOrigin;\n    this.debug = 0;\n    this.hideTokensIframe = 1;\n    this.tokenOrigin = XMLconfig.tokenOrigin;\n    this.attestationOrigin = XMLconfig.attestationOrigin;\n    this.tokenUrlName = XMLconfig.tokenUrlName;\n    this.tokenSecretName = XMLconfig.tokenSecretName;\n    this.tokenIdName = XMLconfig.tokenIdName;\n    this.unsignedTokenDataName = XMLconfig.unsignedTokenDataName;\n    this.tokenParser = XMLconfig.tokenParser;\n    this.localStorageItemName = XMLconfig.localStorageItemName;\n    this.localStorageEthKeyItemName = XMLconfig.localStorageEthKeyItemName;\n    this.addTokenIframe = null;\n\n    this.maxUNlength = 6;\n    this.UNttl = 60 * 60;\n    this.UNsecret = \"0x1234567890abcdef\";\n\n    if (options.hasOwnProperty('debug')) this.debug = options.debug;\n    if (options.hasOwnProperty('attestationOrigin')) this.attestationOrigin = options.attestationOrigin;\n    if (options.hasOwnProperty('tokenOrigin')) this.tokenOrigin = options.tokenOrigin;\n\n    this.isTokenOriginWebsite = false;\n\n    if (this.attestationOrigin) {\n      // if attestationOrigin filled then token need attestaion\n      let currentURL = new URL(window.location.href);\n      let tokensOriginURL = new URL(this.tokensOrigin);\n\n      if (currentURL.origin === tokensOriginURL) {\n        // its tokens website, where tokens saved in localStorage\n        // lets chech url params and save token data to the local storage\n        this.isTokenOriginWebsite = true;\n        this.readMagicUrl();\n      }\n\n      this.attachPostMessageListener(event => {\n        if (event.origin !== tokensOriginURL.origin) {\n          return;\n        }\n        if (event.data.iframeCommand && event.data.iframeCommand == \"closeMe\" && this.addTokenIframe) {\n          this.addTokenIframe.remove();\n          const tokenEvent = new Event('newTokenAdded');\n          document.body.dispatchEvent(tokenEvent);\n        }\n\n      })\n\n    }\n\n    // do we inside iframe?\n    if (window !== window.parent) {\n      this.debug && console.log('negotiator: its iframe, lets return tokens to the parent');\n\n      // its iframe, listen for requests\n      this.attachPostMessageListener(this.listenForParentMessages.bind(this))\n\n      // send ready message to start interaction\n      let referrer = new URL(document.referrer);\n      window.parent.postMessage({ iframeCommand: \"iframeReady\", iframeData: '' }, referrer.origin);\n    }\n\n  }\n\n  async connectMetamaskAndGetAddress() {\n\n    if (!window.ethereum) {\n      throw new Error('Please install metamask before.');\n    }\n\n    // const userAddresses = await window.ethereum.request({ method: 'eth_accounts' });\n    const userAddresses = await window.ethereum.request({ method: 'eth_requestAccounts' });\n    if (!userAddresses || !userAddresses.length) {\n      throw new Error(\"Active Wallet required\");\n    }\n\n    return userAddresses[0];\n  }\n\n  async signMessageWithBrowserWallet(message) {\n    await this.connectMetamaskAndGetAddress();\n\n    let provider = new ethers.providers.Web3Provider(window.ethereum);\n    let signer = provider.getSigner();\n    return await signer.signMessage(message);\n  }\n\n  addTokenThroughIframe(magicLink) {\n    console.log('createTokenIframe fired for : ' + magicLink);\n    // open iframe and request tokens\n    // this.attachPostMessageListener(this.listenForIframeMessages.bind(this));\n\n    const iframe = document.createElement('iframe');\n    this.addTokenIframe = iframe;\n    iframe.src = magicLink;\n    iframe.style.width = '1px';\n    iframe.style.height = '1px';\n    iframe.style.opacity = 0;\n    // let iframeWrap = document.createElement('div');\n    // this.tokenIframeWrap = iframeWrap;\n    // iframeWrap.setAttribute('style', 'width:100%; min-height: 100vh; position: fixed; align-items: center; justify-content: center; display: none; top: 0; left: 0; background: #fffa');\n    // iframeWrap.appendChild(iframe);\n    document.body.appendChild(iframe);\n  }\n\n  // Once a user has given or revoked their permission to use the token-negotiator\n  setUserPermission(bool) {\n    this.userPermissionStatus = bool;\n  }\n\n  // returns true / false\n  getUserPermission() {\n    return this.userPermissionStatus;\n  }\n\n  listenForParentMessages(event) {\n\n    // listen only parent\n    let referrer = new URL(document.referrer);\n    if (event.origin !== referrer.origin) {\n      return;\n    }\n\n    // console.log('iframe: event = ', event.data);\n\n    // parentCommand+parentData required for interaction\n    if (\n      typeof event.data.parentCommand === \"undefined\"\n      || typeof event.data.parentData === \"undefined\"\n    ) {\n      return;\n    }\n\n    // parentCommand contain command code\n    let command = event.data.parentCommand;\n\n    // parentData contains command content (token to sign or empty object)\n    let data = event.data.parentData;\n\n    console.log('iframe: command, data = ', command, data);\n\n    switch (command) {\n      case \"signToken\":\n        // we receive decoded token, we have to find appropriate raw token\n        if (typeof window.Authenticator === \"undefined\") {\n          console.log('Authenticator not defined.');\n          return;\n        }\n\n        let rawTokenData = this.getRawToken(data);\n\n        let base64ticket = rawTokenData.token;\n        let ticketSecret = rawTokenData.secret;\n        this.authenticator = new Authenticator(this);\n\n        let tokenObj = {\n          ticketBlob: base64ticket,\n          ticketSecret: ticketSecret,\n          attestationOrigin: this.attestationOrigin,\n        };\n        if (rawTokenData && rawTokenData.id) tokenObj.email = rawTokenData.id;\n        if (rawTokenData && rawTokenData.magic_link) tokenObj.magicLink = rawTokenData.magic_link;\n\n        this.authenticator.getAuthenticationBlob(tokenObj,\n          res => {\n            console.log('sign result:', res);\n            window.parent.postMessage({ iframeCommand: \"useTokenData\", iframeData: { useToken: res, message: '', success: !!res } }, referrer.origin);\n          });\n        break;\n      case \"tokensList\":\n        // TODO update\n        // console.log('let return tokens');\n        this.returnTokensToParent();\n        break;\n\n      default:\n    }\n  }\n\n  commandDisplayIframe() {\n    let referrer = new URL(document.referrer);\n    window.parent.postMessage({ iframeCommand: \"iframeWrap\", iframeData: 'show' }, referrer.origin);\n  }\n\n  commandHideIframe() {\n    let referrer = new URL(document.referrer);\n    window.parent.postMessage({ iframeCommand: \"iframeWrap\", iframeData: 'hide' }, referrer.origin);\n  }\n\n  returnTokensToParent() {\n    let tokensOutput = this.readTokens();\n    if (tokensOutput.success && !tokensOutput.noTokens) {\n      let decodedTokens = this.decodeTokens(tokensOutput.tokens);\n      let filteredTokens = this.filterTokens(decodedTokens);\n      tokensOutput.tokens = filteredTokens;\n    }\n    let referrer = new URL(document.referrer);\n    window.parent.postMessage({ iframeCommand: \"tokensData\", iframeData: tokensOutput }, referrer.origin);\n  }\n\n  readMagicUrl() {\n    const urlParams = new URLSearchParams(window.location.search);\n    const tokenFromQuery = urlParams.get(this.tokenUrlName);\n    const secretFromQuery = urlParams.get(this.tokenSecretName);\n    const idFromQuery = urlParams.get(this.tokenIdName);\n\n    if (!(tokenFromQuery && secretFromQuery)) {\n      return;\n    }\n\n    // Get the current Storage Tokens\n    let tokensOutput = this.readTokens();\n    let tokens = [];\n\n    let isNewQueryTicket = true;\n\n    if (!tokensOutput.noTokens) {\n      // Build new list of tickets from current and query ticket { ticket, secret }\n      tokens = tokensOutput.tokens;\n\n      tokens.map(tokenData => {\n        if (tokenData.token === tokenFromQuery) {\n          isNewQueryTicket = false;\n        }\n      });\n\n    }\n\n    // Add ticket if new\n    // if (isNewQueryTicket && tokenFromQuery && secretFromQuery) {\n    if (isNewQueryTicket) {\n      tokens.push({\n        token: tokenFromQuery,\n        secret: secretFromQuery,\n        id: idFromQuery,\n        magic_link: window.location.href\n      }); // new raw object\n    }\n    // Set New tokens list raw only, websters will be decoded each time\n    localStorage.setItem(this.localStorageItemName, JSON.stringify(tokens));\n\n    if (window !== window.parent) {\n      this.debug && console.log('negotiator: its iframe, lets close it');\n\n      // send ready message to start interaction\n      let referrer = new URL(document.referrer);\n      window.parent.postMessage({ iframeCommand: \"closeMe\" }, referrer.origin);\n    }\n  }\n\n  /*\n    * Return token objects satisfying the current negotiator's requirements\n    */\n  filterTokens(decodedTokens, filter = {}) {\n    if (Object.keys(filter).length == 0) {\n      filter = this.filter;\n    }\n    let res = [];\n    if (\n      decodedTokens.length\n      && typeof filter === \"object\"\n      && Object.keys(filter).length\n    ) {\n      let filterKeys = Object.keys(filter);\n      decodedTokens.forEach(token => {\n        let fitFilter = 1;\n        this.debug && console.log('test token:', token);\n        filterKeys.forEach(key => {\n          if (token[key].toString() != filter[key].toString()) fitFilter = 0;\n        })\n        if (fitFilter) {\n          res.push(token);\n          this.debug && console.log('token fits:', token);\n        }\n      })\n      return res;\n    } else {\n      return decodedTokens;\n    }\n  }\n\n  compareObjects(o1, o2) {\n    for (var p in o1) {\n      if (o1.hasOwnProperty(p)) {\n        if (o1[p].toString() !== o2[p].toString()) {\n          return false;\n        }\n      }\n    }\n    for (var p in o2) {\n      if (o2.hasOwnProperty(p)) {\n        if (o1[p].toString() !== o2[p].toString()) {\n          return false;\n        }\n      }\n    }\n    return true;\n  };\n\n  // read tokens from local storage and return as object {tokens: [], noTokens: boolean, success: boolean}\n  readTokens() {\n    const storageTickets = localStorage.getItem(this.localStorageItemName);\n    let tokens = [];\n    let output = { tokens: [], noTokens: true, success: true };\n    try {\n      if (storageTickets && storageTickets.length) {\n        // Build new list of tickets from current and query ticket { ticket, secret }\n        tokens = JSON.parse(storageTickets);\n        if (tokens.length !== 0) {\n\n          // output.tokens = tokens;\n          tokens.forEach(item => {\n            if (item.token && item.secret) {\n              output.tokens.push(item)\n              // output.tokens.push({\n              //     token: item.token,\n              //     secret: item.secret\n              // })\n            }\n          })\n        }\n        if (output.tokens.length) {\n          output.noTokens = false;\n        }\n      }\n    } catch (e) {\n      console.log('Cant parse tokens in LocalStorage');\n      if (typeof callBack === \"function\") {\n        output.success = false;\n      }\n    }\n    return output;\n  }\n\n  getRawToken(unsignedToken) {\n    let tokensOutput = this.readTokens();\n    if (tokensOutput.success && !tokensOutput.noTokens) {\n      let rawTokens = tokensOutput.tokens;\n\n      let token = false;\n\n      if (rawTokens.length) {\n        rawTokens.forEach(tokenData => {\n          if (tokenData.token) {\n\n            let decodedToken = new this.tokenParser(this.base64ToUint8array(tokenData.token).buffer);\n            if (decodedToken && decodedToken[this.unsignedTokenDataName]) {\n              let decodedTokenData = decodedToken[this.unsignedTokenDataName];\n\n              if (this.compareObjects(decodedTokenData, unsignedToken)) {\n                token = tokenData;\n              }\n\n            }\n          } else {\n            console.log('empty token data received');\n          }\n\n        })\n      }\n\n      return token;\n    }\n  }\n\n  listenForIframeMessages(event) {\n\n    // console.log('listenForIframeMessages fired');\n\n    let tokensOriginURL = new URL(this.tokensOrigin);\n\n    // listen only tokensOriginURL\n    if (event.origin !== tokensOriginURL.origin) {\n      return;\n    }\n\n    // console.log('parent: event = ', event.data);\n\n    // iframeCommand required for interaction\n    if (\n      typeof event.data.iframeCommand === \"undefined\"\n      || typeof event.data.iframeData === \"undefined\"\n    ) {\n      return;\n    }\n\n    // iframeCommand contain command code\n\n    let command = event.data.iframeCommand;\n\n    // iframeData contains command content (tokens data, useToken , hide/display iframe)\n    let data = event.data.iframeData;\n\n    console.log('parent: command, data = ', command, data);\n\n    switch (command) {\n      case \"iframeWrap\":\n        if (data == \"show\") {\n          this.tokenIframeWrap.style.display = 'block';\n        } else if (data == \"hide\") {\n          this.tokenIframeWrap.style.display = 'none';\n        }\n        break;\n      case \"tokensData\":\n        // tokens received, disable listener\n        this.detachPostMessageListener(this.listenForIframeMessages);\n        // TODO remove iframeWraper\n        this.tokenIframeWrap.remove();\n\n        if (data.success && !data.noTokens) {\n          data.tokens = this.filterTokens(data.tokens);\n        }\n        this.negotiateCallback(data);\n        break;\n\n      case \"useTokenData\":\n\n        this.tokenIframeWrap.remove();\n\n        this.signCallback && this.signCallback(data);\n        this.signCallback = false;\n        break;\n\n      case \"iframeReady\":\n        if (event && event.source) {\n          event.source.postMessage(this.queuedCommand, event.origin);\n          this.queuedCommand = '';\n        }\n\n        break;\n\n      default:\n\n    }\n\n\n  }\n\n  authenticate({unsignedToken, unEndPoint}) {\n    return new Promise(async (resolve, reject) => {\n      await this._authenticate(unsignedToken, unEndPoint, (proof, error) => {\n        if (!proof || !this.useEthKey) return reject(error);\n        resolve({ proof, useEthKey: this.useEthKey, status: true });\n      })\n    })\n  }\n\n\n  async _authenticate(unsignedToken, unEndPoint, signCallback) {\n    console.log('authenticate request. need to implement UN request/sign');\n    let useEthKey;\n    try {\n      useEthKey = await this.getChallengeSigned();\n    } catch (e) {\n      signCallback(null, e);\n      return;\n    }\n\n    console.log(\"useEthKey\", useEthKey);\n\n    this.useEthKey = useEthKey;\n\n    this.signCallback = signCallback;\n    // open iframe and request tokens\n    this.queuedCommand = { parentCommand: 'signToken', parentData: unsignedToken };\n    this.createIframe();\n  }\n\n  getInt64Bytes(x) {\n    var bytes = [];\n    var i = 8;\n    do {\n      bytes[--i] = x & (255);\n      x = x >> 8;\n    } while (i)\n    return bytes;\n  }\n\n  async getUnpredictableNumber(endPoint) {\n    // TODO implement endpoint request\n\n    const expiry = Date.now() + this.UNttl * 1000;\n    let random = Math.floor(Math.random() * (10 ** this.maxUNlength));\n\n    return {\n      UN: random.toString() + this.createHmac(random, expiry),\n      Expiry: expiry\n    }\n  }\n\n  createHmac(random, expiry) {\n    let randomAndExpiryAsBytes = this.getInt64Bytes(random).concat(this.getInt64Bytes(expiry));\n    return ethers.utils.computeHmac(\"sha256\", this.UNsecret, randomAndExpiryAsBytes);\n  }\n\n  ethKeyIsValid(ethKey) {\n    let random = parseInt(ethKey.UN.substr(0, ethKey.UN.length - 66));\n    let hmac = this.createHmac(random, ethKey.expiry);\n    if (hmac !== ethKey.UN.substr(ethKey.UN.length - 66)) return false;\n    if (ethKey.expiry < Date.now()) return false;\n    return true;\n  }\n\n  async getChallengeSigned(unEndPoint) {\n\n    const storageEthKeys = localStorage.getItem(this.localStorageEthKeyItemName);\n    let ethKeys;\n\n    if (storageEthKeys && storageEthKeys.length) {\n      ethKeys = JSON.parse(storageEthKeys);\n    } else {\n      ethKeys = {};\n    }\n\n    let address = await this.connectMetamaskAndGetAddress();\n    address = address.toLowerCase();\n\n    let useEthKey;\n\n    if (ethKeys && ethKeys[address] && !this.ethKeyIsValid(ethKeys[address])) {\n      console.log('remove invalid useEthKey');\n      delete ethKeys[address];\n    }\n\n    if (ethKeys && ethKeys[address]) {\n      useEthKey = ethKeys[address];\n    } else {\n      useEthKey = await this.signNewChallenge(unEndPoint);\n      if (useEthKey) {\n        ethKeys[useEthKey.address.toLowerCase()] = useEthKey;\n        localStorage.setItem(this.localStorageEthKeyItemName, JSON.stringify(ethKeys));\n      }\n    }\n    return useEthKey;\n  }\n\n  async signNewChallenge(unEndPoint) {\n    const { UN, Expiry } = await this.getUnpredictableNumber(unEndPoint);\n\n    const domain = window.location.hostname;\n\n    const challenge = `This is proof that I am visiting ${domain}, which has presented the following challenge ${UN.toString()} to sign.`;\n\n    let signature = await this.signMessageWithBrowserWallet(challenge);\n    const msgHash = ethers.utils.hashMessage(challenge);\n    const msgHashBytes = ethers.utils.arrayify(msgHash);\n\n    const recoveredAddress = ethers.utils.recoverAddress(msgHashBytes, signature);\n\n    return {\n      address: recoveredAddress,\n      expiry: Expiry,\n      challenge,\n      signature,\n      UN\n    };\n  }\n\n  negotiate() {\n    return new Promise((resolve, reject) => {\n      this._negotiate((tokens) => {\n        if (!tokens) return reject(false)\n        resolve(tokens);\n      })\n    })\n  }\n  \n  getTokenInstances() {\n    return new Promise((resolve, reject) => {\n      this._negotiate((tokens) => {\n        if (!tokens) return reject(false)\n        resolve(tokens);\n      })\n    })\n  }\n\n  _negotiate(callBack) {\n\n    if (this.userPermissionStatus === false) {\n      return false;\n    }\n    this.negotiateCallback = callBack;\n\n    if (this.attestationOrigin) {\n\n      console.log('attestationOrigin', this.attestationOrigin);\n\n      if (window.location.href === this.tokensOrigin) {\n        // just read an return tokens\n        let tokensOutput = this.readTokens();\n        if (tokensOutput.success && !tokensOutput.noTokens) {\n          let decodedTokens = this.decodeTokens(tokensOutput.tokens);\n          let filteredTokens = this.filterTokens(decodedTokens);\n          tokensOutput.tokens = filteredTokens;\n          this.negotiateCallback(tokensOutput);\n        }\n      } else {\n        this.queuedCommand = { parentCommand: 'tokensList', parentData: '' };\n        this.createIframe()\n      }\n    } else {\n      console.log('no attestationOrigin...');\n      // TODO test token against blockchain and show tokens as usual view\n    }\n  }\n\n  createIframe() {\n    console.log('createIframe fired');\n    // open iframe and request tokens\n    this.attachPostMessageListener(this.listenForIframeMessages.bind(this));\n\n    const iframe = document.createElement('iframe');\n    this.iframe = iframe;\n    iframe.src = this.tokensOrigin;\n    iframe.style.width = '800px';\n    iframe.style.height = '700px';\n    iframe.style.maxWidth = '100%';\n    iframe.style.background = '#fff';\n    let iframeWrap = document.createElement('div');\n    this.tokenIframeWrap = iframeWrap;\n    iframeWrap.setAttribute('style', 'width:100%; min-height: 100vh; position: fixed; align-items: center; justify-content: center; display: none; top: 0; left: 0; background: #fffa');\n    iframeWrap.appendChild(iframe);\n    document.body.appendChild(iframeWrap);\n  }\n\n  base64ToUint8array(base64str) {\n    // decode base64url to base64. it will do nothing for base64\n    base64str = base64str.split('-').join('+')\n      .split('_').join('/')\n      .split('.').join('=');\n    let res;\n\n    if (typeof Buffer !== 'undefined') {\n      res = Uint8Array.from(Buffer.from(base64str, 'base64'));\n    } else {\n      res = Uint8Array.from(atob(base64str), c => c.charCodeAt(0));\n    }\n    return res;\n  }\n\n  decodeTokens(rawTokens) {\n    if (this.debug) {\n      console.log('decodeTokens fired');\n      console.log(rawTokens);\n    }\n    let decodedTokens = [];\n    if (rawTokens.length) {\n      rawTokens.forEach(tokenData => {\n        if (tokenData.token) {\n          let decodedToken = new this.tokenParser(this.base64ToUint8array(tokenData.token).buffer);\n          if (decodedToken && decodedToken[this.unsignedTokenDataName]) decodedTokens.push(decodedToken[this.unsignedTokenDataName]);\n        } else {\n          console.log('empty token data received');\n        }\n\n      })\n    }\n    return decodedTokens;\n  }\n\n  attachPostMessageListener(listener) {\n    if (window.addEventListener) {\n      window.addEventListener(\"message\", listener, false);\n    } else {\n      // IE8\n      window.attachEvent(\"onmessage\", listener);\n    }\n  }\n  detachPostMessageListener(listener) {\n    if (window.addEventListener) {\n      window.removeEventListener(\"message\", listener, false);\n    } else {\n      // IE8\n      window.detachEvent(\"onmessage\", listener);\n    }\n  }\n}","import {\n  BitString,\n  compareSchema,\n  Integer,\n  OctetString,\n  Sequence,\n  fromBER, Utf8String\n} from \"asn1js\";\nimport { getParametersValue, clearProps, bufferToHexCodes } from \"pvutils\";\nimport AlgorithmIdentifier from \"./AlgorithmIdentifier.js\";\nimport PublicKeyInfo from \"./PublicKeyInfo.js\";\n\nexport class DevconTicket {\n  //**********************************************************************************\n  /**\n   * Constructor for Attribute class\n   * @param {Object} [source={}] source is an object\n   * @param {Object} [source:ArrayBuffer] source is DER encoded\n   * @param {Object} [source:String]  source is CER encoded\n   */\n  constructor(source = {}) {\n    if (typeof (source) == \"string\") {\n      throw new TypeError(\"Unimplemented: Not accepting string yet.\")\n    }\n    if (source instanceof ArrayBuffer) {\n      const asn1 = fromBER(source)\n      this.fromSchema(asn1.result);\n    } else {\n      this.devconId = getParametersValue(\n          source,\n          \"devconId\"\n      );\n      this.ticketId = getParametersValue(\n          source,\n          \"ticketId\"\n      );\n      this.ticketClass = getParametersValue(\n          source,\n          \"ticketClass\"\n      );\n    }\n  }\n\n  static schema(parameters = {}) {\n    const names = getParametersValue(parameters, \"names\", {});\n\n    return new Sequence({\n      name: names.blockName || \"ticket\",\n      value: [\n        new Utf8String({\n          name: names.devconId || \"devconId\",\n        }),\n        new Integer({\n          name: names.ticketId || \"ticketId\",\n        }),\n        new Integer({\n          name: names.ticketClass || \"ticketClass\",\n        }),\n      ],\n    });\n  }\n\n  //**********************************************************************************\n  /**\n   * Convert parsed asn1js object into current class\n   * @param {!Object} schema\n   */\n  fromSchema(schema) {\n    //region Clear input data first\n    clearProps(schema, [\n      //   \"ticket\",\n      \"devconId\",\n      \"ticketId\",\n      \"ticketClass\",\n    ]);\n    //endregion\n\n    //region Check the schema is valid\n    const asn1 = compareSchema(schema, schema, DevconTicket.schema());\n\n    if (asn1.verified === false)\n      throw new Error(\"Object's schema was not verified against input data for DevconTicket\");\n\n    //endregion\n\n    //region Get internal properties from parsed schema\n    // noinspection JSUnresolvedVariable\n\n    if (\"devconId\" in asn1.result) {\n      this.devconId = asn1.result[\"devconId\"].valueBlock.value;\n    }\n\n    if (\"ticketId\" in asn1.result) {\n      const ticketId = asn1.result[\"ticketId\"].valueBlock._valueHex;\n      this.ticketId = BigInt(\"0x\" + bufferToHexCodes(ticketId));\n    }\n\n    if (\"ticketClass\" in asn1.result) {\n      const ticketClass = asn1.result[\"ticketClass\"].valueBlock._valueHex;\n      this.ticketClass = BigInt(\"0x\" + bufferToHexCodes(ticketClass));\n    }\n\n    //endregion\n  }\n}\n\nexport class SignedDevconTicket {\n  //**********************************************************************************\n  /**\n   * Constructor for Attribute class\n   * @param {Object} [source={}] source is an object\n   * @param {Object} [source:ArrayBuffer] source is DER encoded\n   * @param {Object} [source:String]  source is DER encoded\n   */\n  constructor(source = {}) {\n    if (typeof(source) == \"string\") {\n\n      const ticketEncoded = (source.startsWith(\"https://\")) ?\n          (new URL(source)).searchParams.get('ticket') : source;\n      \n      let base64str = ticketEncoded\n          .split('_').join('/')\n          .split('-').join('+')\n          .split('.').join('=');\n\n      // source = Uint8Array.from(Buffer.from(base64str, 'base64')).buffer;\n      if (typeof Buffer !== 'undefined') {\n        source = Uint8Array.from(Buffer.from(base64str, 'base64')).buffer;\n      } else {\n        source = Uint8Array.from(atob(base64str), c => c.charCodeAt(0)).buffer;\n      }\n      \n    }\n\n    if (source instanceof ArrayBuffer) {\n      const asn1 = fromBER(source);\n      this.fromSchema(asn1.result);\n    } else {\n      this.ticket = new DevconTicket(source.ticket);\n\n      this.commitment = getParametersValue(\n          source,\n          \"commitment\"\n      );\n\n      // TODO: issue #75\n      // this.signatureAlgorithm = new AlgorithmIdentifier(source.signatureAlgorithm);\n\t  \n\t  this.publicKeyInfo = new PublicKeyInfo(source.publicKeyInfo)\n\n      this.signatureValue = getParametersValue(\n          source,\n          \"signatureValue\"\n      );\n    }\n  }\n\n  //**********************************************************************************\n  /**\n   * Return value of pre-defined ASN.1 schema for current class\n   *\n   * ASN.1 schema:\n   * ```asn1\n   * CertificateList  ::=  SEQUENCE  {\n   *    tbsCertList          TBSCertList,\n   *    signatureAlgorithm   AlgorithmIdentifier,\n   *    signatureValue       BIT STRING  }\n   * ```\n   *\n   * @param {Object} parameters Input parameters for the schema\n   * @returns {Object} asn1js schema object\n   */\n  static schema(parameters = {}) {\n    /**\n     * @type {Object}\n     * @property {string} [blockName]\n     * @property {string} [signatureAlgorithm]\n     * @property {string} [signatureValue]\n     */\n    const names = getParametersValue(parameters, \"names\", {});\n\n    return new Sequence({\n      name: names.blockName || \"SignedDevconTicket\",\n      value: [\n        DevconTicket.schema(parameters),\n        new OctetString({\n          name: \"commitment\",\n        }),\n        /* PublicKeyInfo is specified in schema here but not appearing in the constructed data object.\n         * This is because the underlying AlgorithmIdentifier isn't fully implemented and also\n         * that this data is not important for the 1st delivery deadline, won't be read by client anyway.\n         * TODO: add support for PublicKeyInfo https://github.com/TokenScript/attestation/issues/75\n         */\n        // new Sequence( {\n        //   name: \"publicKeyInfo\",\n        //   optional: true,\n        //   value: [\n        //     PublicKeyInfo.schema(\n        //         names.publicKeyInfo || {\n        //           names: {\n        //             blockName: \"publicKeyInfo\",\n        //           },\n        //         }\n        //     )\n        //   ]\n        // }),\n\n        new BitString({\n          name: \"signatureValue\",\n        }),\n      ],\n    });\n  }\n  //**********************************************************************************\n  /**\n   * Convert parsed asn1js object into current class\n   * @param {!Object} schema\n   */\n  fromSchema(schema) {\n    //region Clear input data first\n    clearProps(schema, [\n      //   \"ticket\",\n      \"ticket\",\n      \"commitment\",\n      // TODO: #75\n\t  \"publicKeyInfo\",\n      \"signatureValue\",\n    ]);\n    //endregion\n\n    //region Check the schema is valid\n    const asn1 = compareSchema(schema, schema, SignedDevconTicket.schema());\n\n    if (asn1.verified === false)\n\t\tthrow new Error(\"Object's schema was not verified against input data for SignedDevconTicket\");\n\n    //endregion\n\n    //region Get internal properties from parsed schema\n    // noinspection JSUnresolvedVariable\n\n    this.ticket = new DevconTicket(asn1.result.ticket.valueBeforeDecode)\n\n    if (\"commitment\" in asn1.result)\n      this.commitment = asn1.result[\"commitment\"].valueBlock.valueHex;\n\n    // TODO: issue #75\n    // this.signatureAlgorithm = new AlgorithmIdentifier(asn1.result.signatureAlgorithm);\n\tthis.publicKeyInfo = new PublicKeyInfo({\n      schema: asn1.result.publicKeyInfo,\n    });\n\n    const signatureValue = asn1.result.signatureValue;\n    this.signatureValue = signatureValue.valueBlock.valueHex;    //endregion\n  }\n}"],"sourceRoot":""}